{"remainingRequest":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/babel-loader/lib/index.js!/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlaheywood/Documents/GitHub/Accutrate/src/views/app/applications/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/src/views/app/applications/Chat.vue","mtime":1554628934000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.find\";\nimport _objectSpread from \"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from 'vuex';\nimport ApplicationMenu from '@/components/Common/ApplicationMenu';\nimport ContactList from '@/components/ChatApp/ContactList';\nimport ConversationList from '@/components/ChatApp/ConversationList';\nimport ConversationDetail from '@/components/ChatApp/ConversationDetail';\nexport default {\n  components: {\n    ApplicationMenu: ApplicationMenu,\n    ContactList: ContactList,\n    ConversationList: ConversationList,\n    ConversationDetail: ConversationDetail\n  },\n  data: function data() {\n    return {\n      tabIndex: 0,\n      message: '',\n      searchKey: '',\n      isLoadCurrentConversation: false,\n      otherUser: null,\n      conversationMessages: null\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['currentUser', 'isLoadContacts', 'isLoadConversations', 'error', 'contacts', 'contactsSearchResult', 'conversations'])),\n  methods: _objectSpread({}, mapActions(['getContacts', 'searchContacts', 'getConversations']), {\n    selectConversation: function selectConversation(otherUser, messages) {\n      this.otherUser = otherUser;\n      this.conversationMessages = messages;\n    },\n    selectContact: function selectContact(userId) {\n      var _this = this;\n\n      this.otherUser = this.contacts.find(function (x) {\n        return x.id === userId;\n      });\n      var conversation = this.conversations.find(function (x) {\n        return x.users.includes(userId) && x.users.includes(_this.currentUser.id);\n      });\n\n      if (conversation) {\n        console.log('change selected conversation');\n        this.conversationMessages = conversation.messages;\n      } else {\n        console.log('create new conversation');\n        var date = new Date();\n        this.conversations.splice(0, 0, {\n          users: [userId, this.currentUser.id],\n          messages: [],\n          lastMessageTime: date.getHours() + ':' + date.getMinutes()\n        });\n        this.conversationMessages = [];\n      }\n\n      this.tabIndex = 0;\n      this.message = '';\n      this.searchKey = '';\n    },\n    sendMessage: function sendMessage() {\n      console.log('add message to conversation');\n      var date = new Date();\n      this.conversationMessages.push({\n        sender: this.currentUser.id,\n        text: this.message,\n        time: date.getHours() + ':' + date.getMinutes()\n      });\n      this.message = '';\n    }\n  }),\n  mounted: function mounted() {\n    this.getContacts({\n      userId: this.currentUser.id,\n      searchKey: ''\n    });\n    this.getConversations(this.currentUser.id);\n  },\n  watch: {\n    searchKey: function searchKey(val, oldVal) {\n      this.searchContacts({\n        userId: this.currentUser.id,\n        searchKey: val\n      });\n    }\n  }\n};",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div>\r\n  <b-row class=\"app-row\">\r\n    <b-colxx xxs=\"12\" class=\"chat-app\">\r\n      <conversation-detail v-if=\"isLoadContacts && isLoadConversations && otherUser!=null\" key=\"conversation\"\r\n        :current-user=\"currentUser\"\r\n        :other-user=\"otherUser\"\r\n        :messages=\"conversationMessages\"  />\r\n      <div v-else class=\"loading\" key=\"conversationLoading\"></div>\r\n    </b-colxx>\r\n  </b-row>\r\n  <div class=\"chat-input-container d-flex justify-content-between align-items-center\">\r\n    <b-input class=\"flex-grow-1\" type=\"text\" :placeholder=\"$t('chat.saysomething')\" v-model=\"message\"  @keyup.native.enter=\"sendMessage\" />\r\n    <div>\r\n      <b-button variant=\"outline-primary\" class=\"icon-button large ml-1\">\r\n        <i class=\"simple-icon-paper-clip\" />\r\n      </b-button>\r\n      <b-button variant=\"primary\" class=\"icon-button large ml-1\" @click=\"sendMessage\">\r\n        <i class=\"simple-icon-arrow-right\" />\r\n      </b-button>\r\n    </div>\r\n  </div>\r\n  <application-menu>\r\n      <b-tabs no-fade class=\"pl-0 pr-0 h-100\"  content-class=\"chat-app-tab-content\" nav-class=\"card-header-tabs ml-0 mr-0\" v-model=\"tabIndex\">\r\n          <b-tab :title=\"$t('chat.messages')\" active title-item-class=\"w-50 text-center\" no-body class=\"chat-app-tab-pane\">\r\n            <div class=\"pt-4 pr-4 pl-4 pb-0 mt-2\">\r\n\r\n            </div>\r\n              <conversation-list v-if=\"isLoadContacts && isLoadConversations\" key=\"conversationList\"\r\n              :current-user=\"currentUser\"\r\n              :conversations=\"conversations\"\r\n              :contacts=\"contacts\"\r\n              @select-conversation=\"selectConversation\" />\r\n              <div v-else class=\"loading\" key=\"conversationListLoading\"></div>\r\n          </b-tab>\r\n          <b-tab :title=\"$t('chat.contacts')\" title-item-class=\"w-50 text-center\"  no-body class=\"chat-app-tab-pane\">\r\n            <div class=\"pt-4 pr-4 pl-4 pb-0 mt-2\">\r\n              <div class=\"form-group\">\r\n                <b-input type=\"text\" class=\"rounded\" :placeholder=\"$t('menu.search')\" v-model=\"searchKey\"/>\r\n              </div>\r\n            </div>\r\n              <contact-list v-if=\"isLoadContacts\" key=\"contactList\" :data=\"contactsSearchResult\" @select-contact=\"selectContact\"/>\r\n              <div v-else class=\"loading\" key=\"contactListLoading\"></div>\r\n          </b-tab>\r\n      </b-tabs>\r\n    </application-menu>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport ApplicationMenu from '@/components/Common/ApplicationMenu'\r\nimport ContactList from '@/components/ChatApp/ContactList'\r\nimport ConversationList from '@/components/ChatApp/ConversationList'\r\nimport ConversationDetail from '@/components/ChatApp/ConversationDetail'\r\n\r\nexport default {\r\n  components: {\r\n    ApplicationMenu,\r\n    ContactList,\r\n    ConversationList,\r\n    ConversationDetail\r\n  },\r\n  data () {\r\n    return {\r\n      tabIndex: 0,\r\n      message: '',\r\n      searchKey: '',\r\n      isLoadCurrentConversation: false,\r\n      otherUser: null,\r\n      conversationMessages: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['currentUser', 'isLoadContacts', 'isLoadConversations', 'error', 'contacts', 'contactsSearchResult', 'conversations'])\r\n  },\r\n  methods: {\r\n    ...mapActions(['getContacts', 'searchContacts', 'getConversations']),\r\n    selectConversation (otherUser, messages) {\r\n      this.otherUser = otherUser\r\n      this.conversationMessages = messages\r\n    },\r\n    selectContact (userId) {\r\n      this.otherUser = this.contacts.find(x => x.id === userId)\r\n      const conversation = this.conversations.find(x => x.users.includes(userId) && x.users.includes(this.currentUser.id))\r\n      if (conversation) {\r\n        console.log('change selected conversation')\r\n        this.conversationMessages = conversation.messages\r\n      } else {\r\n        console.log('create new conversation')\r\n        const date = new Date()\r\n        this.conversations.splice(0, 0, {\r\n          users: [userId, this.currentUser.id],\r\n          messages: [],\r\n          lastMessageTime: date.getHours() + ':' + date.getMinutes()\r\n        })\r\n        this.conversationMessages = []\r\n      }\r\n      this.tabIndex = 0\r\n      this.message = ''\r\n      this.searchKey = ''\r\n    },\r\n    sendMessage () {\r\n      console.log('add message to conversation')\r\n      const date = new Date()\r\n      this.conversationMessages.push({\r\n        sender: this.currentUser.id,\r\n        text: this.message,\r\n        time: date.getHours() + ':' + date.getMinutes()\r\n      })\r\n      this.message = ''\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getContacts({ userId: this.currentUser.id, searchKey: '' })\r\n    this.getConversations(this.currentUser.id)\r\n  },\r\n  watch: {\r\n    searchKey (val, oldVal) {\r\n      this.searchContacts({\r\n        userId: this.currentUser.id,\r\n        searchKey: val\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/app/applications"}]}