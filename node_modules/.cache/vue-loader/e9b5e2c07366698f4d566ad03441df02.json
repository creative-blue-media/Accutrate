{"remainingRequest":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlaheywood/Documents/GitHub/Accutrate/src/components/Common/ColorSwitcher.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/src/components/Common/ColorSwitcher.vue","mtime":1554628934000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { colors } from '@/constants/config'\r\nexport default {\r\n  data () {\r\n    return {\r\n      isOpen: false,\r\n      isMenuOver: false,\r\n\r\n      selectedColor: ''\r\n    }\r\n  },\r\n  methods: {\r\n    addEvents () {\r\n      document.addEventListener('click', this.handleDocumentClick)\r\n      document.addEventListener('touchstart', this.handleDocumentClick)\r\n    },\r\n    removeEvents () {\r\n      document.removeEventListener('click', this.handleDocumentClick)\r\n      document.removeEventListener('touchstart', this.handleDocumentClick)\r\n    },\r\n    handleDocumentClick (e) {\r\n      if (!this.isMenuOver) {\r\n        this.toggle()\r\n      }\r\n    },\r\n    toggle () {\r\n      this.isOpen = !this.isOpen\r\n    },\r\n    changeThemeColor (color) {\r\n      localStorage.setItem('themeColor', color)\r\n      this.toggle()\r\n      setTimeout(() => {\r\n        window.location.reload()\r\n      }, 500)\r\n    }\r\n  },\r\n  watch: {\r\n    isOpen (val) {\r\n      if (val) {\r\n        this.addEvents()\r\n      } else {\r\n        this.removeEvents()\r\n      }\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    this.removeEvents()\r\n  },\r\n  mounted () {\r\n    const color = localStorage.getItem('themeColor')\r\n    if (color != null && colors.includes(color)) {\r\n      this.selectedColor = color\r\n    } else {\r\n      this.selectedColor = 'light.orange'\r\n    }\r\n  }\r\n}\r\n\r\n",{"version":3,"sources":["ColorSwitcher.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ColorSwitcher.vue","sourceRoot":"src/components/Common","sourcesContent":["<template>\r\n    <div :class=\"{'theme-colors':true, 'shown' : isOpen}\"  @mouseenter=\"isMenuOver=true\" @mouseleave=\"isMenuOver=false\">\r\n        <div class=\"p-4\">\r\n            <p class=\"text-muted mb-2\">Light Theme</p>\r\n            <div class=\"d-flex flex-row justify-content-between mb-4\">\r\n                <a href=\"#\" :class=\"{'theme-color theme-color-purple':true, 'active' :selectedColor==='light.purple'}\" @click.prevent=\"changeThemeColor('light.purple')\"></a>\r\n                <a href=\"#\" :class=\"{'theme-color theme-color-blue':true, 'active' :selectedColor==='light.blue'}\" @click.prevent=\"changeThemeColor('light.blue')\"></a>\r\n                <a href=\"#\" :class=\"{'theme-color theme-color-green':true, 'active' :selectedColor==='light.green'}\" @click.prevent=\"changeThemeColor('light.green')\"></a>\r\n                <a href=\"#\" :class=\"{'theme-color theme-color-orange':true, 'active' :selectedColor==='light.orange'}\" @click.prevent=\"changeThemeColor('light.orange')\"></a>\r\n                <a href=\"#\" :class=\"{'theme-color theme-color-red':true, 'active' :selectedColor==='light.red'}\" @click.prevent=\"changeThemeColor('light.red')\"></a>\r\n            </div>\r\n            <p class=\"text-muted mb-2\">Dark Theme</p>\r\n            <div class=\"d-flex flex-row justify-content-between\">\r\n                <a href=\"#\" :class=\"{'theme-color theme-color-purple':true, 'active' :selectedColor==='dark.purple'}\" @click.prevent=\"changeThemeColor('dark.purple')\"></a>\r\n                <a href=\"#\" :class=\"{'theme-color theme-color-blue':true, 'active' :selectedColor==='dark.blue'}\" @click.prevent=\"changeThemeColor('dark.blue')\"></a>\r\n                <a href=\"#\" :class=\"{'theme-color theme-color-green':true, 'active' :selectedColor==='dark.green'}\" @click.prevent=\"changeThemeColor('dark.green')\"></a>\r\n                <a href=\"#\" :class=\"{'theme-color theme-color-orange':true, 'active' :selectedColor==='dark.orange'}\" @click.prevent=\"changeThemeColor('dark.orange')\"></a>\r\n                <a href=\"#\" :class=\"{'theme-color theme-color-red':true, 'active' :selectedColor==='dark.red'}\" @click.prevent=\"changeThemeColor('dark.red')\"></a>\r\n            </div>\r\n        </div>\r\n        <a href=\"#\" class=\"theme-button\" @click.prevent=\"toggle\"> <i class=\"simple-icon-magic-wand\"></i> </a>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { colors } from '@/constants/config'\r\nexport default {\r\n  data () {\r\n    return {\r\n      isOpen: false,\r\n      isMenuOver: false,\r\n\r\n      selectedColor: ''\r\n    }\r\n  },\r\n  methods: {\r\n    addEvents () {\r\n      document.addEventListener('click', this.handleDocumentClick)\r\n      document.addEventListener('touchstart', this.handleDocumentClick)\r\n    },\r\n    removeEvents () {\r\n      document.removeEventListener('click', this.handleDocumentClick)\r\n      document.removeEventListener('touchstart', this.handleDocumentClick)\r\n    },\r\n    handleDocumentClick (e) {\r\n      if (!this.isMenuOver) {\r\n        this.toggle()\r\n      }\r\n    },\r\n    toggle () {\r\n      this.isOpen = !this.isOpen\r\n    },\r\n    changeThemeColor (color) {\r\n      localStorage.setItem('themeColor', color)\r\n      this.toggle()\r\n      setTimeout(() => {\r\n        window.location.reload()\r\n      }, 500)\r\n    }\r\n  },\r\n  watch: {\r\n    isOpen (val) {\r\n      if (val) {\r\n        this.addEvents()\r\n      } else {\r\n        this.removeEvents()\r\n      }\r\n    }\r\n  },\r\n  beforeDestroy () {\r\n    this.removeEvents()\r\n  },\r\n  mounted () {\r\n    const color = localStorage.getItem('themeColor')\r\n    if (color != null && colors.includes(color)) {\r\n      this.selectedColor = color\r\n    } else {\r\n      this.selectedColor = 'light.orange'\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n"]}]}