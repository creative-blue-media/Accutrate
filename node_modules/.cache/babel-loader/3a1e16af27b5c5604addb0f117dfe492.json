{"remainingRequest":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/babel-loader/lib/index.js!/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/src/views/app/pages/ThumbList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/src/views/app/pages/ThumbList.vue","mtime":1558175808000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _toConsumableArray from \"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from '@/components/Svg';\nimport vSelect from 'vue-select';\nimport 'vue-select/dist/vue-select.css';\nimport axios from 'axios';\nimport ImageListItem from '@/components/Listing/ImageListItem';\nimport ThumbListItem from '@/components/Listing/ThumbListItem';\nimport DataListItem from '@/components/Listing/DataListItem';\nimport { apiUrl } from '@/constants/config';\nexport default {\n  components: {\n    DataListIcon: DataListIcon,\n    ThumbListIcon: ThumbListIcon,\n    ImageListIcon: ImageListIcon,\n    vSelect: vSelect,\n    ImageListItem: ImageListItem,\n    ThumbListItem: ThumbListItem,\n    DataListItem: DataListItem\n  },\n  data: function data() {\n    return {\n      isLoad: false,\n      apiBase: apiUrl + '/cakes/fordatatable',\n      displayMode: 'thumb',\n      sort: {\n        column: 'title',\n        label: 'Product Name'\n      },\n      sortOptions: [{\n        column: 'title',\n        label: 'Product Name'\n      }, {\n        column: 'category',\n        label: 'Category'\n      }, {\n        column: 'status',\n        label: 'Status'\n      }],\n      page: 1,\n      perPage: 4,\n      search: '',\n      from: 0,\n      to: 0,\n      total: 0,\n      lastPage: 0,\n      items: [],\n      pageSizes: [4, 8, 12],\n      selectedItems: [],\n      categories: [{\n        label: 'Cakes',\n        value: 'Cakes'\n      }, {\n        label: 'Cupcakes',\n        value: 'Cupcakes'\n      }, {\n        label: 'Desserts',\n        value: 'Desserts'\n      }],\n      statuses: [{\n        text: 'ON HOLD',\n        value: 'ON HOLD'\n      }, {\n        text: 'PROCESSED',\n        value: 'PROCESSED'\n      }],\n      newItem: {\n        title: '',\n        category: '',\n        description: '',\n        status: ''\n      }\n    };\n  },\n  methods: {\n    loadItems: function loadItems() {\n      var _this = this;\n\n      this.isLoad = false;\n      axios.get(this.apiUrl).then(function (response) {\n        return response.data;\n      }).then(function (res) {\n        _this.total = res.total;\n        _this.from = res.from;\n        _this.to = res.to;\n        _this.items = res.data;\n        _this.perPage = res.per_page;\n        _this.selectedItems = [];\n        _this.lastPage = res.last_page;\n        _this.isLoad = true;\n      });\n    },\n    hideModal: function hideModal(refname) {\n      this.$refs[refname].hide();\n    },\n    changeDisplayMode: function changeDisplayMode(displayType) {\n      this.displayMode = displayType;\n    },\n    changePageSize: function changePageSize(perPage) {\n      this.perPage = perPage;\n    },\n    changeOrderBy: function changeOrderBy(sort) {\n      this.sort = sort;\n    },\n    addNewItem: function addNewItem() {\n      console.log('adding item : ', this.newItem);\n    },\n    selectAll: function selectAll(isToggle) {\n      if (this.selectedItems.length >= this.items.length) {\n        if (isToggle) this.selectedItems = [];\n      } else {\n        this.selectedItems = this.items.map(function (x) {\n          return x.id;\n        });\n      }\n    },\n    keymap: function keymap(event) {\n      switch (event.srcKey) {\n        case 'select':\n          this.selectAll(false);\n          break;\n\n        case 'undo':\n          this.selectedItems = [];\n          break;\n      }\n    },\n    getIndex: function getIndex(value, arr, prop) {\n      for (var i = 0; i < arr.length; i++) {\n        if (arr[i][prop] === value) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n    toggleItem: function toggleItem(event, itemId) {\n      if (event.shiftKey && this.selectedItems.length > 0) {\n        var _this$selectedItems;\n\n        var itemsForToggle = this.items;\n        var start = this.getIndex(itemId, itemsForToggle, 'id');\n        var end = this.getIndex(this.selectedItems[this.selectedItems.length - 1], itemsForToggle, 'id');\n        itemsForToggle = itemsForToggle.slice(Math.min(start, end), Math.max(start, end) + 1);\n\n        (_this$selectedItems = this.selectedItems).push.apply(_this$selectedItems, _toConsumableArray(itemsForToggle.map(function (item) {\n          return item.id;\n        })));\n      } else {\n        if (this.selectedItems.includes(itemId)) {\n          this.selectedItems = this.selectedItems.filter(function (x) {\n            return x !== itemId;\n          });\n        } else this.selectedItems.push(itemId);\n      }\n    },\n    handleContextmenu: function handleContextmenu(vnode) {\n      if (!this.selectedItems.includes(vnode.key)) {\n        this.selectedItems = [vnode.key];\n      }\n    },\n    onContextCopy: function onContextCopy() {\n      console.log('context menu item clicked - Copy Items: ', this.selectedItems);\n    },\n    onContextArchive: function onContextArchive() {\n      console.log('context menu item clicked - Move to Archive Items: ', this.selectedItems);\n    },\n    onContextDelete: function onContextDelete() {\n      console.log('context menu item clicked - Delete Items: ', this.selectedItems);\n    },\n    linkGen: function linkGen(pageNum) {\n      return '#page-' + pageNum;\n    }\n  },\n  computed: {\n    isSelectedAll: function isSelectedAll() {\n      return this.selectedItems.length >= this.items.length;\n    },\n    isAnyItemSelected: function isAnyItemSelected() {\n      return this.selectedItems.length > 0 && this.selectedItems.length < this.items.length;\n    },\n    apiUrl: function apiUrl() {\n      return \"\".concat(this.apiBase, \"?sort=\").concat(this.sort.column, \"&page=\").concat(this.page, \"&per_page=\").concat(this.perPage, \"&search=\").concat(this.search);\n    }\n  },\n  watch: {\n    search: function search() {\n      this.page = 1;\n    },\n    apiUrl: function apiUrl() {\n      this.loadItems();\n    }\n  },\n  mounted: function mounted() {\n    this.loadItems();\n  }\n};",{"version":3,"sources":["ThumbList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <b-colxx class=\"disable-text-selection\">\r\n    <b-row>\r\n      <b-colxx xxs=\"12\">\r\n        <h1>{{ $t('menu.thumb-list') }}</h1>\r\n        <div class=\"float-sm-right\">\r\n          <b-button\r\n            v-b-modal.modalright\r\n            variant=\"primary\"\r\n            size=\"lg\"\r\n            class=\"top-right-button\"\r\n          >{{ $t('pages.add-new') }}</b-button>\r\n          <b-button-group>\r\n            <b-dropdown split right @click=\"selectAll(true)\" class=\"check-button\" variant=\"primary\">\r\n              <label\r\n                class=\"custom-control custom-checkbox pl-4 mb-0 d-inline-block\"\r\n                slot=\"button-content\"\r\n              >\r\n                <input\r\n                  class=\"custom-control-input\"\r\n                  type=\"checkbox\"\r\n                  :checked=\"isSelectedAll\"\r\n                  v-shortkey=\"{select: ['ctrl','a'], undo: ['ctrl','d']}\"\r\n                  @shortkey=\"keymap\"\r\n                >\r\n                <span\r\n                  :class=\"{\r\n                'custom-control-label' :true,\r\n                'indeterminate' : isAnyItemSelected\r\n              }\"\r\n                />\r\n              </label>\r\n              <b-dropdown-item>{{$t('pages.delete')}}</b-dropdown-item>\r\n              <b-dropdown-item>{{$t('pages.another-action')}}</b-dropdown-item>\r\n            </b-dropdown>\r\n          </b-button-group>\r\n          <b-modal\r\n            id=\"modalright\"\r\n            ref=\"modalright\"\r\n            :title=\"$t('pages.add-new-modal-title')\"\r\n            class=\"modal-right\"\r\n          >\r\n            <b-form>\r\n              <b-form-group :label=\"$t('pages.product-name')\">\r\n                <b-form-input v-model=\"newItem.title\"/>\r\n              </b-form-group>\r\n              <b-form-group :label=\"$t('pages.category')\">\r\n                <v-select :options=\"categories\" v-model=\"newItem.category\"/>\r\n              </b-form-group>\r\n              <b-form-group :label=\"$t('pages.description')\">\r\n                <b-textarea v-model=\"newItem.description\" :rows=\"2\" :max-rows=\"2\"/>\r\n              </b-form-group>\r\n              <b-form-group :label=\"$t('pages.status')\">\r\n                <b-form-radio-group\r\n                  stacked\r\n                  class=\"pt-2\"\r\n                  :options=\"statuses\"\r\n                  v-model=\"newItem.status\"\r\n                />\r\n              </b-form-group>\r\n            </b-form>\r\n\r\n            <template slot=\"modal-footer\">\r\n              <b-button\r\n                variant=\"outline-secondary\"\r\n                @click=\"hideModal('modalright')\"\r\n              >{{ $t('pages.cancel') }}</b-button>\r\n              <b-button\r\n                variant=\"primary\"\r\n                @click=\"addNewItem()\"\r\n                class=\"mr-1\"\r\n              >{{ $t('pages.submit') }}</b-button>\r\n            </template>\r\n          </b-modal>\r\n        </div>\r\n        <piaf-breadcrumb/>\r\n        <div class=\"mb-2 mt-2\">\r\n          <b-button\r\n            variant=\"empty\"\r\n            class=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n            v-b-toggle.displayOptions\r\n          >\r\n            {{ $t('pages.display-options') }}\r\n            <i class=\"simple-icon-arrow-down align-middle\"/>\r\n          </b-button>\r\n          <b-collapse id=\"displayOptions\" class=\"d-md-block\">\r\n            <span class=\"mr-3 mb-2 d-inline-block float-md-left\">\r\n              <a\r\n                :class=\"{'mr-2 view-icon':true,'active': displayMode==='list'}\"\r\n                @click=\"changeDisplayMode('list')\"\r\n              >\r\n                <data-list-icon/>\r\n              </a>\r\n              <a\r\n                :class=\"{'mr-2 view-icon':true,'active': displayMode==='thumb'}\"\r\n                @click=\"changeDisplayMode('thumb')\"\r\n              >\r\n                <thumb-list-icon/>\r\n              </a>\r\n              <a\r\n                :class=\"{'mr-2 view-icon':true,'active': displayMode==='image'}\"\r\n                @click=\"changeDisplayMode('image')\"\r\n              >\r\n                <image-list-icon/>\r\n              </a>\r\n            </span>\r\n            <div class=\"d-block d-md-inline-block mb-2\">\r\n              <b-dropdown\r\n                id=\"ddown1\"\r\n                :text=\"`${$t('pages.orderby')} ${sort.label}`\"\r\n                variant=\"outline-dark\"\r\n                class=\"mr-1 float-md-left btn-group\"\r\n                size=\"xs\"\r\n              >\r\n                <b-dropdown-item\r\n                  v-for=\"(order,index) in sortOptions\"\r\n                  :key=\"index\"\r\n                  @click=\"changeOrderBy(order)\"\r\n                >{{ order.label }}</b-dropdown-item>\r\n              </b-dropdown>\r\n\r\n              <div class=\"search-sm d-inline-block float-md-left mr-1 align-top\">\r\n                <b-input :placeholder=\"$t('menu.search')\" v-model=\"search\"/>\r\n              </div>\r\n            </div>\r\n            <div class=\"float-md-right\">\r\n              <span class=\"text-muted text-small mr-1 mb-2\">{{from}}-{{to}} of {{ total }}</span>\r\n              <b-dropdown\r\n                id=\"ddown2\"\r\n                right\r\n                :text=\"`${perPage}`\"\r\n                variant=\"outline-dark\"\r\n                class=\"d-inline-block\"\r\n                size=\"xs\"\r\n              >\r\n                <b-dropdown-item\r\n                  v-for=\"(size,index) in pageSizes\"\r\n                  :key=\"index\"\r\n                  @click=\"changePageSize(size)\"\r\n                >{{ size }}</b-dropdown-item>\r\n              </b-dropdown>\r\n            </div>\r\n          </b-collapse>\r\n        </div>\r\n        <div class=\"separator mb-5\"/>\r\n      </b-colxx>\r\n    </b-row>\r\n    <template v-if=\"isLoad\">\r\n      <b-row v-if=\"displayMode==='image'\" key=\"image\">\r\n        <b-colxx\r\n          sm=\"6\"\r\n          lg=\"4\"\r\n          xl=\"3\"\r\n          class=\"mb-3\"\r\n          v-for=\"(item,index) in items\"\r\n          :key=\"index\"\r\n          :id=\"item.id\"\r\n        >\r\n          <image-list-item\r\n            :key=\"item.id\"\r\n            :data=\"item\"\r\n            :selected-items=\"selectedItems\"\r\n            @toggle-item=\"toggleItem\"\r\n            v-contextmenu:contextmenu\r\n          />\r\n        </b-colxx>\r\n      </b-row>\r\n      <b-row v-else-if=\"displayMode==='thumb'\" key=\"thumb\">\r\n        <b-colxx xxs=\"12\" class=\"mb-3\" v-for=\"(item,index) in items\" :key=\"index\" :id=\"item.id\">\r\n          <thumb-list-item\r\n            :key=\"item.id\"\r\n            :data=\"item\"\r\n            :selected-items=\"selectedItems\"\r\n            @toggle-item=\"toggleItem\"\r\n            v-contextmenu:contextmenu\r\n          />\r\n        </b-colxx>\r\n      </b-row>\r\n      <b-row v-else-if=\"displayMode==='list'\" key=\"list\">\r\n        <b-colxx xxs=\"12\" class=\"mb-3\" v-for=\"(item,index) in items\" :key=\"index\" :id=\"item.id\">\r\n          <data-list-item\r\n            :key=\"item.id\"\r\n            :data=\"item\"\r\n            :selected-items=\"selectedItems\"\r\n            @toggle-item=\"toggleItem\"\r\n            v-contextmenu:contextmenu\r\n          />\r\n        </b-colxx>\r\n      </b-row>\r\n      <b-row v-if=\"lastPage>1\">\r\n        <b-colxx xxs=\"12\">\r\n          <b-pagination-nav\r\n            :number-of-pages=\"lastPage\"\r\n            :link-gen=\"linkGen\"\r\n            v-model=\"page\"\r\n            :per-page=\"perPage\"\r\n            align=\"center\"\r\n          >\r\n            <template v-slot:next-text>\r\n              <i class=\"simple-icon-arrow-right\"/>\r\n            </template>\r\n            <template v-slot:prev-text>\r\n              <i class=\"simple-icon-arrow-left\"/>\r\n            </template>\r\n            <template v-slot:first-text>\r\n              <i class=\"simple-icon-control-start\"/>\r\n            </template>\r\n            <template v-slot:last-text>\r\n              <i class=\"simple-icon-control-end\"/>\r\n            </template>\r\n          </b-pagination-nav>\r\n        </b-colxx>\r\n      </b-row>\r\n    </template>\r\n    <template v-else>\r\n      <div class=\"loading\"></div>\r\n    </template>\r\n\r\n    <v-contextmenu ref=\"contextmenu\" @contextmenu=\"handleContextmenu\">\r\n      <v-contextmenu-item @click=\"onContextCopy()\">\r\n        <i class=\"simple-icon-docs\"/>\r\n        <span>Copy</span>\r\n      </v-contextmenu-item>\r\n      <v-contextmenu-item @click=\"onContextArchive()\">\r\n        <i class=\"simple-icon-drawer\"/>\r\n        <span>Move to archive</span>\r\n      </v-contextmenu-item>\r\n      <v-contextmenu-item @click=\"onContextDelete()\">\r\n        <i class=\"simple-icon-trash\"/>\r\n        <span>Delete</span>\r\n      </v-contextmenu-item>\r\n    </v-contextmenu>\r\n  </b-colxx>\r\n</template>\r\n<script>\r\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from '@/components/Svg'\r\nimport vSelect from 'vue-select'\r\nimport 'vue-select/dist/vue-select.css'\r\nimport axios from 'axios'\r\n\r\nimport ImageListItem from '@/components/Listing/ImageListItem'\r\nimport ThumbListItem from '@/components/Listing/ThumbListItem'\r\nimport DataListItem from '@/components/Listing/DataListItem'\r\nimport { apiUrl } from '@/constants/config'\r\n\r\nexport default {\r\n  components: {\r\n    DataListIcon,\r\n    ThumbListIcon,\r\n    ImageListIcon,\r\n    vSelect,\r\n    ImageListItem,\r\n    ThumbListItem,\r\n    DataListItem\r\n  },\r\n  data () {\r\n    return {\r\n      isLoad: false,\r\n      apiBase: apiUrl + '/cakes/fordatatable',\r\n      displayMode: 'thumb',\r\n      sort: { column: 'title', label: 'Product Name' },\r\n      sortOptions: [\r\n        { column: 'title', label: 'Product Name' },\r\n        { column: 'category', label: 'Category' },\r\n        { column: 'status', label: 'Status' }\r\n      ],\r\n      page: 1,\r\n      perPage: 4,\r\n      search: '',\r\n      from: 0,\r\n      to: 0,\r\n      total: 0,\r\n      lastPage: 0,\r\n      items: [],\r\n      pageSizes: [4, 8, 12],\r\n      selectedItems: [],\r\n      categories: [\r\n        { label: 'Cakes', value: 'Cakes' },\r\n        { label: 'Cupcakes', value: 'Cupcakes' },\r\n        { label: 'Desserts', value: 'Desserts' }\r\n      ],\r\n      statuses: [\r\n        { text: 'ON HOLD', value: 'ON HOLD' },\r\n        { text: 'PROCESSED', value: 'PROCESSED' }\r\n      ],\r\n      newItem: {\r\n        title: '',\r\n        category: '',\r\n        description: '',\r\n        status: ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    loadItems () {\r\n      this.isLoad = false\r\n      axios\r\n        .get(this.apiUrl)\r\n        .then(response => {\r\n          return response.data\r\n        })\r\n        .then(res => {\r\n          this.total = res.total\r\n          this.from = res.from\r\n          this.to = res.to\r\n          this.items = res.data\r\n          this.perPage = res.per_page\r\n          this.selectedItems = []\r\n          this.lastPage = res.last_page\r\n          this.isLoad = true\r\n        })\r\n    },\r\n    hideModal (refname) {\r\n      this.$refs[refname].hide()\r\n    },\r\n    changeDisplayMode (displayType) {\r\n      this.displayMode = displayType\r\n    },\r\n    changePageSize (perPage) {\r\n      this.perPage = perPage\r\n    },\r\n    changeOrderBy (sort) {\r\n      this.sort = sort\r\n    },\r\n    addNewItem () {\r\n      console.log('adding item : ', this.newItem)\r\n    },\r\n    selectAll (isToggle) {\r\n      if (this.selectedItems.length >= this.items.length) {\r\n        if (isToggle) this.selectedItems = []\r\n      } else {\r\n        this.selectedItems = this.items.map(x => x.id)\r\n      }\r\n    },\r\n    keymap (event) {\r\n      switch (event.srcKey) {\r\n        case 'select':\r\n          this.selectAll(false)\r\n          break\r\n        case 'undo':\r\n          this.selectedItems = []\r\n          break\r\n      }\r\n    },\r\n    getIndex (value, arr, prop) {\r\n      for (var i = 0; i < arr.length; i++) {\r\n        if (arr[i][prop] === value) {\r\n          return i\r\n        }\r\n      }\r\n      return -1\r\n    },\r\n    toggleItem (event, itemId) {\r\n      if (event.shiftKey && this.selectedItems.length > 0) {\r\n        let itemsForToggle = this.items\r\n        var start = this.getIndex(itemId, itemsForToggle, 'id')\r\n        var end = this.getIndex(\r\n          this.selectedItems[this.selectedItems.length - 1],\r\n          itemsForToggle,\r\n          'id'\r\n        )\r\n        itemsForToggle = itemsForToggle.slice(\r\n          Math.min(start, end),\r\n          Math.max(start, end) + 1\r\n        )\r\n        this.selectedItems.push(\r\n          ...itemsForToggle.map(item => {\r\n            return item.id\r\n          })\r\n        )\r\n      } else {\r\n        if (this.selectedItems.includes(itemId)) {\r\n          this.selectedItems = this.selectedItems.filter(x => x !== itemId)\r\n        } else this.selectedItems.push(itemId)\r\n      }\r\n    },\r\n    handleContextmenu (vnode) {\r\n      if (!this.selectedItems.includes(vnode.key)) {\r\n        this.selectedItems = [vnode.key]\r\n      }\r\n    },\r\n    onContextCopy () {\r\n      console.log(\r\n        'context menu item clicked - Copy Items: ',\r\n        this.selectedItems\r\n      )\r\n    },\r\n    onContextArchive () {\r\n      console.log(\r\n        'context menu item clicked - Move to Archive Items: ',\r\n        this.selectedItems\r\n      )\r\n    },\r\n    onContextDelete () {\r\n      console.log(\r\n        'context menu item clicked - Delete Items: ',\r\n        this.selectedItems\r\n      )\r\n    },\r\n    linkGen (pageNum) {\r\n      return '#page-' + pageNum\r\n    }\r\n  },\r\n  computed: {\r\n    isSelectedAll () {\r\n      return this.selectedItems.length >= this.items.length\r\n    },\r\n    isAnyItemSelected () {\r\n      return (\r\n        this.selectedItems.length > 0 &&\r\n        this.selectedItems.length < this.items.length\r\n      )\r\n    },\r\n    apiUrl () {\r\n      return `${this.apiBase}?sort=${this.sort.column}&page=${\r\n        this.page\r\n      }&per_page=${this.perPage}&search=${this.search}`\r\n    }\r\n  },\r\n  watch: {\r\n    search () {\r\n      this.page = 1\r\n    },\r\n    apiUrl () {\r\n      this.loadItems()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.loadItems()\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/app/pages"}]}