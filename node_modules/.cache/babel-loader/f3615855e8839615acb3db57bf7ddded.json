{"remainingRequest":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/babel-loader/lib/index.js!/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/eslint-loader/index.js??ref--13-0!/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/src/store/modules/chat.js","dependencies":[{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/src/store/modules/chat.js","mtime":1554628934000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nimport { apiUrl } from '@/constants/config';\nvar state = {\n  isLoadContacts: false,\n  isLoadConversations: false,\n  error: '',\n  contacts: null,\n  contactsSearchResult: null,\n  conversations: null\n};\nvar getters = {\n  isLoadContacts: function isLoadContacts(state) {\n    return state.isLoadContacts;\n  },\n  isLoadConversations: function isLoadConversations(state) {\n    return state.isLoadConversations;\n  },\n  error: function error(state) {\n    return state.error;\n  },\n  contacts: function contacts(state) {\n    return state.contacts;\n  },\n  conversations: function conversations(state) {\n    return state.conversations;\n  },\n  contactsSearchResult: function contactsSearchResult(state) {\n    return state.contactsSearchResult;\n  }\n};\nvar mutations = {\n  getContactsSuccess: function getContactsSuccess(state, payload) {\n    state.isLoadContacts = true;\n    state.contacts = payload.contacts;\n    state.contactsSearchResult = payload.contacts;\n  },\n  getContactsSearchSuccess: function getContactsSearchSuccess(state, payload) {\n    state.contactsSearchResult = payload.contacts;\n  },\n  getContactsError: function getContactsError(state, error) {\n    state.isLoadContacts = false;\n    state.error = error;\n  },\n  getConversationsSuccess: function getConversationsSuccess(state, payload) {\n    state.isLoadConversations = true;\n    state.conversations = payload.conversations;\n  },\n  getConversationsError: function getConversationsError(state, error) {\n    state.isLoadConversations = false;\n    state.error = error;\n  }\n};\nvar actions = {\n  searchContacts: function searchContacts(_ref, _ref2) {\n    var commit = _ref.commit,\n        state = _ref.state;\n    var userId = _ref2.userId,\n        searchKey = _ref2.searchKey;\n\n    if (searchKey.length > 0) {\n      axios.get(\"\".concat(apiUrl, \"/contacts?search=\").concat(searchKey)).then(function (r) {\n        return r.data;\n      }).then(function (res) {\n        if (res.status) {\n          commit('getContactsSearchSuccess', {\n            contacts: res.data,\n            userId: userId\n          });\n        } else {\n          commit('getContactsError', 'error:getContacts');\n        }\n      });\n    } else {\n      commit('getContactsSearchSuccess', {\n        contacts: state.contacts,\n        userId: userId\n      });\n    }\n  },\n  getContacts: function getContacts(_ref3, userId) {\n    var commit = _ref3.commit;\n    axios.get(\"\".concat(apiUrl, \"/contacts\")).then(function (r) {\n      return r.data;\n    }).then(function (res) {\n      if (res.status) {\n        commit('getContactsSuccess', {\n          contacts: res.data,\n          userId: userId\n        });\n      } else {\n        commit('getContactsError', 'error:getContacts');\n      }\n    });\n  },\n  getConversations: function getConversations(_ref4, userId) {\n    var commit = _ref4.commit;\n    axios.get(\"\".concat(apiUrl, \"/conversations\")).then(function (r) {\n      return r.data;\n    }).then(function (res) {\n      if (res.status) {\n        commit('getConversationsSuccess', {\n          conversations: res.data,\n          userId: userId\n        });\n      } else {\n        commit('getConversationsError', 'error:getConversations');\n      }\n    });\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/src/store/modules/chat.js"],"names":["axios","apiUrl","state","isLoadContacts","isLoadConversations","error","contacts","contactsSearchResult","conversations","getters","mutations","getContactsSuccess","payload","getContactsSearchSuccess","getContactsError","getConversationsSuccess","getConversationsError","actions","searchContacts","commit","userId","searchKey","length","get","then","r","data","res","status","getContacts","getConversations"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { apiUrl } from '@/constants/config'\r\n\r\nconst state = {\r\n  isLoadContacts: false,\r\n  isLoadConversations: false,\r\n  error: '',\r\n  contacts: null,\r\n  contactsSearchResult: null,\r\n  conversations: null\r\n}\r\n\r\nconst getters = {\r\n  isLoadContacts: state => state.isLoadContacts,\r\n  isLoadConversations: state => state.isLoadConversations,\r\n  error: state => state.error,\r\n  contacts: state => state.contacts,\r\n  conversations: state => state.conversations,\r\n  contactsSearchResult: state => state.contactsSearchResult\r\n\r\n}\r\n\r\nconst mutations = {\r\n  getContactsSuccess (state, payload) {\r\n    state.isLoadContacts = true\r\n    state.contacts = payload.contacts\r\n    state.contactsSearchResult = payload.contacts\r\n  },\r\n  getContactsSearchSuccess (state, payload) {\r\n    state.contactsSearchResult = payload.contacts\r\n  },\r\n  getContactsError (state, error) {\r\n    state.isLoadContacts = false\r\n    state.error = error\r\n  },\r\n  getConversationsSuccess (state, payload) {\r\n    state.isLoadConversations = true\r\n    state.conversations = payload.conversations\r\n  },\r\n  getConversationsError (state, error) {\r\n    state.isLoadConversations = false\r\n    state.error = error\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  searchContacts ({ commit, state }, { userId, searchKey }) {\r\n    if (searchKey.length > 0) {\r\n      axios\r\n        .get(`${apiUrl}/contacts?search=${searchKey}`)\r\n        .then(r => r.data)\r\n        .then(res => {\r\n          if (res.status) {\r\n            commit('getContactsSearchSuccess', { contacts: res.data, userId: userId })\r\n          } else {\r\n            commit('getContactsError', 'error:getContacts')\r\n          }\r\n        })\r\n    } else {\r\n      commit('getContactsSearchSuccess', { contacts: state.contacts, userId: userId })\r\n    }\r\n  },\r\n  getContacts ({ commit }, userId) {\r\n    axios\r\n      .get(`${apiUrl}/contacts`)\r\n      .then(r => r.data)\r\n      .then(res => {\r\n        if (res.status) {\r\n          commit('getContactsSuccess', { contacts: res.data, userId: userId })\r\n        } else {\r\n          commit('getContactsError', 'error:getContacts')\r\n        }\r\n      })\r\n  },\r\n  getConversations ({ commit }, userId) {\r\n    axios\r\n      .get(`${apiUrl}/conversations`)\r\n      .then(r => r.data)\r\n      .then(res => {\r\n        if (res.status) {\r\n          commit('getConversationsSuccess', { conversations: res.data, userId: userId })\r\n        } else {\r\n          commit('getConversationsError', 'error:getConversations')\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}\r\n"]}]}