{"remainingRequest":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/babel-loader/lib/index.js!/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vuetable-2/src/components/Vuetable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vuetable-2/src/components/Vuetable.vue","mtime":1517845987000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport _typeof from \"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  props: {\n    fields: {\n      type: Array,\n      required: true\n    },\n    loadOnStart: {\n      type: Boolean,\n      default: true\n    },\n    apiUrl: {\n      type: String,\n      default: ''\n    },\n    httpMethod: {\n      type: String,\n      default: 'get',\n      validator: function validator(value) {\n        return ['get', 'post'].indexOf(value) > -1;\n      }\n    },\n    reactiveApiUrl: {\n      type: Boolean,\n      default: true\n    },\n    apiMode: {\n      type: Boolean,\n      default: true\n    },\n    data: {\n      type: [Array, Object],\n      default: null\n    },\n    dataTotal: {\n      type: Number,\n      default: 0\n    },\n    dataManager: {\n      type: Function,\n      default: null\n    },\n    dataPath: {\n      type: String,\n      default: 'data'\n    },\n    paginationPath: {\n      type: [String],\n      default: 'links.pagination'\n    },\n    queryParams: {\n      type: [Object, Function],\n      default: function _default() {\n        return {\n          sort: 'sort',\n          page: 'page',\n          perPage: 'per_page'\n        };\n      }\n    },\n    appendParams: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    httpOptions: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    httpFetch: {\n      type: Function,\n      default: null\n    },\n    perPage: {\n      type: Number,\n      default: 10\n    },\n    initialPage: {\n      type: Number,\n      default: 1\n    },\n    sortOrder: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    multiSort: {\n      type: Boolean,\n      default: function _default() {\n        return false;\n      }\n    },\n    tableHeight: {\n      type: String,\n      default: null\n    },\n\n    /*\r\n     * physical key that will trigger multi-sort option\r\n     * possible values: 'alt', 'ctrl', 'meta', 'shift'\r\n     * 'ctrl' might not work as expected on Mac\r\n     */\n    multiSortKey: {\n      type: String,\n      default: 'alt'\n    },\n\n    /* deprecated */\n    rowClassCallback: {\n      type: [String, Function],\n      default: ''\n    },\n    rowClass: {\n      type: [String, Function],\n      default: ''\n    },\n    detailRowComponent: {\n      type: String,\n      default: ''\n    },\n    detailRowTransition: {\n      type: String,\n      default: ''\n    },\n    trackBy: {\n      type: String,\n      default: 'id'\n    },\n    css: {\n      type: Object,\n      default: function _default() {\n        return {\n          tableClass: 'ui blue selectable celled stackable attached table',\n          loadingClass: 'loading',\n          ascendingIcon: 'blue chevron up icon',\n          descendingIcon: 'blue chevron down icon',\n          ascendingClass: 'sorted-asc',\n          descendingClass: 'sorted-desc',\n          sortableIcon: '',\n          detailRowClass: 'vuetable-detail-row',\n          handleIcon: 'grey sidebar icon',\n          tableBodyClass: 'vuetable-semantic-no-top vuetable-fixed-layout',\n          tableHeaderClass: 'vuetable-fixed-layout'\n        };\n      }\n    },\n    minRows: {\n      type: Number,\n      default: 0\n    },\n    silent: {\n      type: Boolean,\n      default: false\n    },\n    noDataTemplate: {\n      type: String,\n      default: function _default() {\n        return 'No Data Available';\n      }\n    },\n    showSortIcons: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      eventPrefix: 'vuetable:',\n      tableFields: [],\n      tableData: null,\n      tablePagination: null,\n      currentPage: this.initialPage,\n      selectedTo: [],\n      visibleDetailRows: [],\n      lastScrollPosition: 0,\n      scrollBarWidth: '17px',\n      //chrome default\n      scrollVisible: false\n    };\n  },\n  mounted: function mounted() {\n    this.normalizeFields();\n    this.normalizeSortOrder();\n\n    if (this.isFixedHeader) {\n      this.scrollBarWidth = this.getScrollBarWidth() + 'px';\n    }\n\n    this.$nextTick(function () {\n      this.fireEvent('initialized', this.tableFields);\n    });\n\n    if (this.loadOnStart) {\n      this.loadData();\n    }\n\n    if (this.isFixedHeader) {\n      var elem = this.$el.getElementsByClassName('vuetable-body-wrapper')[0];\n\n      if (elem != null) {\n        elem.addEventListener('scroll', this.handleScroll);\n      }\n    }\n  },\n  destroyed: function destroyed() {\n    var elem = this.$el.getElementsByClassName('vuetable-body-wrapper')[0];\n\n    if (elem != null) {\n      elem.removeEventListener('scroll', this.handleScroll);\n    }\n  },\n  computed: {\n    version: function version() {\n      return VERSION;\n    },\n    useDetailRow: function useDetailRow() {\n      if (this.tableData && this.tableData[0] && this.detailRowComponent !== '' && typeof this.tableData[0][this.trackBy] === 'undefined') {\n        this.warn('You need to define unique row identifier in order for detail-row feature to work. Use `track-by` prop to define one!');\n        return false;\n      }\n\n      return this.detailRowComponent !== '';\n    },\n    countVisibleFields: function countVisibleFields() {\n      return this.tableFields.filter(function (field) {\n        return field.visible;\n      }).length;\n    },\n    countTableData: function countTableData() {\n      if (this.tableData === null) {\n        return 0;\n      }\n\n      return this.tableData.length;\n    },\n    displayEmptyDataRow: function displayEmptyDataRow() {\n      return this.countTableData === 0 && this.noDataTemplate.length > 0;\n    },\n    lessThanMinRows: function lessThanMinRows() {\n      if (this.tableData === null || this.tableData.length === 0) {\n        return true;\n      }\n\n      return this.tableData.length < this.minRows;\n    },\n    blankRows: function blankRows() {\n      if (this.tableData === null || this.tableData.length === 0) {\n        return this.minRows;\n      }\n\n      if (this.tableData.length >= this.minRows) {\n        return 0;\n      }\n\n      return this.minRows - this.tableData.length;\n    },\n    isApiMode: function isApiMode() {\n      return this.apiMode;\n    },\n    isDataMode: function isDataMode() {\n      return !this.apiMode;\n    },\n    isFixedHeader: function isFixedHeader() {\n      return this.tableHeight != null;\n    }\n  },\n  methods: {\n    getScrollBarWidth: function getScrollBarWidth() {\n      var outer = document.createElement('div');\n      var inner = document.createElement('div');\n      outer.style.visibility = 'hidden';\n      outer.style.width = '100px';\n      inner.style.width = '100%';\n      outer.appendChild(inner);\n      document.body.appendChild(outer);\n      var widthWithoutScrollbar = outer.offsetWidth;\n      outer.style.overflow = 'scroll';\n      var widthWithScrollbar = inner.offsetWidth;\n      document.body.removeChild(outer);\n      return widthWithoutScrollbar - widthWithScrollbar;\n    },\n    handleScroll: function handleScroll(e) {\n      //make sure that the header and the body are aligned when scrolling horizontally on a table that is wider than the viewport\n      var horizontal = e.currentTarget.scrollLeft;\n\n      if (horizontal != this.lastScrollPosition) {\n        //don't modify header scroll if we are scrolling vertically\n        var header = this.$el.getElementsByClassName('vuetable-head-wrapper')[0];\n\n        if (header != null) {\n          header.scrollLeft = horizontal;\n        }\n\n        this.lastScrollPosition = horizontal;\n      }\n    },\n    normalizeFields: function normalizeFields() {\n      if (typeof this.fields === 'undefined') {\n        this.warn('You need to provide \"fields\" prop.');\n        return;\n      }\n\n      this.tableFields = [];\n      var self = this;\n      var obj;\n      this.fields.forEach(function (field, i) {\n        if (typeof field === 'string') {\n          obj = {\n            name: field,\n            title: self.setTitle(field),\n            titleClass: '',\n            dataClass: '',\n            callback: null,\n            visible: true\n          };\n        } else {\n          obj = {\n            name: field.name,\n            width: field.width,\n            title: field.title === undefined ? self.setTitle(field.name) : field.title,\n            sortField: field.sortField,\n            titleClass: field.titleClass === undefined ? '' : field.titleClass,\n            dataClass: field.dataClass === undefined ? '' : field.dataClass,\n            callback: field.callback === undefined ? '' : field.callback,\n            visible: field.visible === undefined ? true : field.visible\n          };\n        }\n\n        self.tableFields.push(obj);\n      });\n    },\n    setData: function setData(data) {\n      if (data === null || typeof data === 'undefined') return;\n      this.fireEvent('loading');\n\n      if (Array.isArray(data)) {\n        this.tableData = data;\n        this.fireEvent('loaded');\n        return;\n      }\n\n      this.tableData = this.getObjectValue(data, this.dataPath, null);\n      this.tablePagination = this.getObjectValue(data, this.paginationPath, null);\n      this.$nextTick(function () {\n        this.fixHeader();\n        this.fireEvent('pagination-data', this.tablePagination);\n        this.fireEvent('loaded');\n      });\n    },\n    setTitle: function setTitle(str) {\n      if (this.isSpecialField(str)) {\n        return '';\n      }\n\n      return this.titleCase(str);\n    },\n    getTitle: function getTitle(field) {\n      if (typeof field.title === 'function') return field.title();\n      return typeof field.title === 'undefined' ? field.name.replace('.', ' ') : field.title;\n    },\n    renderTitle: function renderTitle(field) {\n      var title = this.getTitle(field);\n\n      if (title.length > 0 && this.isInCurrentSortGroup(field) || this.hasSortableIcon(field)) {\n        var style = \"opacity:\".concat(this.sortIconOpacity(field), \";position:relative;float:right\");\n        var iconTag = this.showSortIcons ? this.renderIconTag(['sort-icon', this.sortIcon(field)], \"style=\\\"\".concat(style, \"\\\"\")) : '';\n        return title + ' ' + iconTag;\n      }\n\n      return title;\n    },\n    renderSequence: function renderSequence(index) {\n      return this.tablePagination ? this.tablePagination.from + index : index;\n    },\n    renderNormalField: function renderNormalField(field, item) {\n      return this.hasCallback(field) ? this.callCallback(field, item) : this.getObjectValue(item, field.name, '');\n    },\n    isSpecialField: function isSpecialField(fieldName) {\n      return fieldName.slice(0, 2) === '__';\n    },\n    titleCase: function titleCase(str) {\n      return str.replace(/\\w+/g, function (txt) {\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n      });\n    },\n    camelCase: function camelCase(str) {\n      var delimiter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '_';\n      var self = this;\n      return str.split(delimiter).map(function (item) {\n        return self.titleCase(item);\n      }).join('');\n    },\n    notIn: function notIn(str, arr) {\n      return arr.indexOf(str) === -1;\n    },\n    loadData: function loadData() {\n      var success = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.loadSuccess;\n      var failed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.loadFailed;\n\n      if (this.isDataMode) {\n        this.callDataManager();\n        return;\n      }\n\n      this.fireEvent('loading');\n      this.httpOptions['params'] = this.getAppendParams(this.getAllQueryParams());\n      return this.fetch(this.apiUrl, this.httpOptions).then(success, failed).catch(function () {\n        return failed();\n      });\n    },\n    fetch: function fetch(apiUrl, httpOptions) {\n      return this.httpFetch ? this.httpFetch(apiUrl, httpOptions) : axios[this.httpMethod](apiUrl, httpOptions);\n    },\n    loadSuccess: function loadSuccess(response) {\n      this.fireEvent('load-success', response);\n      var body = this.transform(response.data);\n      this.tableData = this.getObjectValue(body, this.dataPath, null);\n      this.tablePagination = this.getObjectValue(body, this.paginationPath, null);\n\n      if (this.tablePagination === null) {\n        this.warn('vuetable: pagination-path \"' + this.paginationPath + '\" not found. ' + 'It looks like the data returned from the sever does not have pagination information ' + \"or you may have set it incorrectly.\\n\" + 'You can explicitly suppress this warning by setting pagination-path=\"\".');\n      }\n\n      this.$nextTick(function () {\n        this.fixHeader();\n        this.fireEvent('pagination-data', this.tablePagination);\n        this.fireEvent('loaded');\n      });\n    },\n    fixHeader: function fixHeader() {\n      if (!this.isFixedHeader) {\n        return;\n      }\n\n      var elem = this.$el.getElementsByClassName('vuetable-body-wrapper')[0];\n\n      if (elem != null) {\n        if (elem.scrollHeight > elem.clientHeight) {\n          this.scrollVisible = true;\n        } else {\n          this.scrollVisible = false;\n        }\n      }\n    },\n    loadFailed: function loadFailed(response) {\n      console.error('load-error', response);\n      this.fireEvent('load-error', response);\n      this.fireEvent('loaded');\n    },\n    transform: function transform(data) {\n      var func = 'transform';\n\n      if (this.parentFunctionExists(func)) {\n        return this.$parent[func].call(this.$parent, data);\n      }\n\n      return data;\n    },\n    parentFunctionExists: function parentFunctionExists(func) {\n      return func !== '' && typeof this.$parent[func] === 'function';\n    },\n    callParentFunction: function callParentFunction(func, args) {\n      var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (this.parentFunctionExists(func)) {\n        return this.$parent[func].call(this.$parent, args);\n      }\n\n      return defaultValue;\n    },\n    fireEvent: function fireEvent(eventName, args) {\n      this.$emit(this.eventPrefix + eventName, args);\n    },\n    warn: function warn(msg) {\n      if (!this.silent) {\n        console.warn(msg);\n      }\n    },\n    getAllQueryParams: function getAllQueryParams() {\n      var params = {};\n\n      if (typeof this.queryParams === 'function') {\n        params = this.queryParams(this.sortOrder, this.currentPage, this.perPage);\n        return _typeof(params) !== 'object' ? {} : params;\n      }\n\n      params[this.queryParams.sort] = this.getSortParam();\n      params[this.queryParams.page] = this.currentPage;\n      params[this.queryParams.perPage] = this.perPage;\n      return params;\n    },\n    getSortParam: function getSortParam() {\n      if (!this.sortOrder || this.sortOrder.field == '') {\n        return '';\n      }\n\n      if (typeof this.$parent['getSortParam'] === 'function') {\n        return this.$parent['getSortParam'].call(this.$parent, this.sortOrder);\n      }\n\n      return this.getDefaultSortParam();\n    },\n    getDefaultSortParam: function getDefaultSortParam() {\n      var result = '';\n\n      for (var i = 0; i < this.sortOrder.length; i++) {\n        var fieldName = typeof this.sortOrder[i].sortField === 'undefined' ? this.sortOrder[i].field : this.sortOrder[i].sortField;\n        result += fieldName + '|' + this.sortOrder[i].direction + (i + 1 < this.sortOrder.length ? ',' : '');\n      }\n\n      return result;\n    },\n    getAppendParams: function getAppendParams(params) {\n      for (var x in this.appendParams) {\n        params[x] = this.appendParams[x];\n      }\n\n      return params;\n    },\n    extractName: function extractName(string) {\n      return string.split(':')[0].trim();\n    },\n    extractArgs: function extractArgs(string) {\n      return string.split(':')[1];\n    },\n    isSortable: function isSortable(field) {\n      return !(typeof field.sortField === 'undefined');\n    },\n    isInCurrentSortGroup: function isInCurrentSortGroup(field) {\n      return this.currentSortOrderPosition(field) !== false;\n    },\n    hasSortableIcon: function hasSortableIcon(field) {\n      return this.isSortable(field) && this.css.sortableIcon != '';\n    },\n    currentSortOrderPosition: function currentSortOrderPosition(field) {\n      if (!this.isSortable(field)) {\n        return false;\n      }\n\n      for (var i = 0; i < this.sortOrder.length; i++) {\n        if (this.fieldIsInSortOrderPosition(field, i)) {\n          return i;\n        }\n      }\n\n      return false;\n    },\n    fieldIsInSortOrderPosition: function fieldIsInSortOrderPosition(field, i) {\n      return this.sortOrder[i].field === field.name && this.sortOrder[i].sortField === field.sortField;\n    },\n    orderBy: function orderBy(field, event) {\n      if (!this.isSortable(field)) return;\n      var key = this.multiSortKey.toLowerCase() + 'Key';\n\n      if (this.multiSort && event[key]) {\n        //adding column to multisort\n        this.multiColumnSort(field);\n      } else {\n        //no multisort, or resetting sort\n        this.singleColumnSort(field);\n      }\n\n      this.currentPage = 1; // reset page index\n\n      if (this.apiMode || this.dataManager) {\n        this.loadData();\n      }\n    },\n    multiColumnSort: function multiColumnSort(field) {\n      var i = this.currentSortOrderPosition(field);\n\n      if (i === false) {\n        //this field is not in the sort array yet\n        this.sortOrder.push({\n          field: field.name,\n          sortField: field.sortField,\n          direction: 'asc'\n        });\n      } else {\n        //this field is in the sort array, now we change its state\n        if (this.sortOrder[i].direction === 'asc') {\n          // switch direction\n          this.sortOrder[i].direction = 'desc';\n        } else {\n          //remove sort condition\n          this.sortOrder.splice(i, 1);\n        }\n      }\n    },\n    singleColumnSort: function singleColumnSort(field) {\n      if (this.sortOrder.length === 0) {\n        this.clearSortOrder();\n      }\n\n      this.sortOrder.splice(1); //removes additional columns\n\n      if (this.fieldIsInSortOrderPosition(field, 0)) {\n        // change sort direction\n        this.sortOrder[0].direction = this.sortOrder[0].direction === 'asc' ? 'desc' : 'asc';\n      } else {\n        // reset sort direction\n        this.sortOrder[0].direction = 'asc';\n      }\n\n      this.sortOrder[0].field = field.name;\n      this.sortOrder[0].sortField = field.sortField;\n    },\n    clearSortOrder: function clearSortOrder() {\n      this.sortOrder.push({\n        field: '',\n        sortField: '',\n        direction: 'asc'\n      });\n    },\n    sortClass: function sortClass(field) {\n      var cls = '';\n      var i = this.currentSortOrderPosition(field);\n\n      if (i !== false) {\n        cls = this.sortOrder[i].direction == 'asc' ? this.css.ascendingClass : this.css.descendingClass;\n      }\n\n      return cls;\n    },\n    sortIcon: function sortIcon(field) {\n      var cls = this.css.sortableIcon;\n      var i = this.currentSortOrderPosition(field);\n\n      if (i !== false) {\n        cls = this.sortOrder[i].direction == 'asc' ? this.css.ascendingIcon : this.css.descendingIcon;\n      }\n\n      return cls;\n    },\n    sortIconOpacity: function sortIconOpacity(field) {\n      /*\r\n       * fields with stronger precedence have darker color\r\n       *\r\n       * if there are few fields, we go down by 0.3\r\n       * ex. 2 fields are selected: 1.0, 0.7\r\n       *\r\n       * if there are more we go down evenly on the given spectrum\r\n       * ex. 6 fields are selected: 1.0, 0.86, 0.72, 0.58, 0.44, 0.3\r\n       */\n      var max = 1.0,\n          min = 0.3,\n          step = 0.3;\n      var count = this.sortOrder.length;\n      var current = this.currentSortOrderPosition(field);\n\n      if (max - count * step < min) {\n        step = (max - min) / (count - 1);\n      }\n\n      var opacity = max - current * step;\n      return opacity;\n    },\n    hasCallback: function hasCallback(item) {\n      return item.callback ? true : false;\n    },\n    callCallback: function callCallback(field, item) {\n      if (!this.hasCallback(field)) return;\n\n      if (typeof field.callback == 'function') {\n        return field.callback(this.getObjectValue(item, field.name));\n      }\n\n      var args = field.callback.split('|');\n      var func = args.shift();\n\n      if (typeof this.$parent[func] === 'function') {\n        var value = this.getObjectValue(item, field.name);\n        return args.length > 0 ? this.$parent[func].apply(this.$parent, [value].concat(args)) : this.$parent[func].call(this.$parent, value);\n      }\n\n      return null;\n    },\n    getObjectValue: function getObjectValue(object, path, defaultValue) {\n      defaultValue = typeof defaultValue === 'undefined' ? null : defaultValue;\n      var obj = object;\n\n      if (path.trim() != '') {\n        var keys = path.split('.');\n        keys.forEach(function (key) {\n          if (obj !== null && typeof obj[key] !== 'undefined' && obj[key] !== null) {\n            obj = obj[key];\n          } else {\n            obj = defaultValue;\n            return;\n          }\n        });\n      }\n\n      return obj;\n    },\n    toggleCheckbox: function toggleCheckbox(dataItem, fieldName, event) {\n      var isChecked = event.target.checked;\n      var idColumn = this.trackBy;\n\n      if (dataItem[idColumn] === undefined) {\n        this.warn('__checkbox field: The \"' + this.trackBy + '\" field does not exist! Make sure the field you specify in \"track-by\" prop does exist.');\n        return;\n      }\n\n      var key = dataItem[idColumn];\n\n      if (isChecked) {\n        this.selectId(key);\n      } else {\n        this.unselectId(key);\n      }\n\n      this.$emit('vuetable:checkbox-toggled', isChecked, dataItem);\n    },\n    selectId: function selectId(key) {\n      if (!this.isSelectedRow(key)) {\n        this.selectedTo.push(key);\n      }\n    },\n    unselectId: function unselectId(key) {\n      this.selectedTo = this.selectedTo.filter(function (item) {\n        return item !== key;\n      });\n    },\n    isSelectedRow: function isSelectedRow(key) {\n      return this.selectedTo.indexOf(key) >= 0;\n    },\n    rowSelected: function rowSelected(dataItem, fieldName) {\n      var idColumn = this.trackBy;\n      var key = dataItem[idColumn];\n      return this.isSelectedRow(key);\n    },\n    checkCheckboxesState: function checkCheckboxesState(fieldName) {\n      if (!this.tableData) return;\n      var self = this;\n      var idColumn = this.trackBy;\n      var selector = 'th.vuetable-th-checkbox-' + idColumn + ' input[type=checkbox]';\n      var els = document.querySelectorAll(selector); //fixed:document.querySelectorAll return the typeof nodeList not array\n\n      if (els.forEach === undefined) els.forEach = function (cb) {\n        [].forEach.call(els, cb);\n      }; // count how many checkbox row in the current page has been checked\n\n      var selected = this.tableData.filter(function (item) {\n        return self.selectedTo.indexOf(item[idColumn]) >= 0;\n      }); // count == 0, clear the checkbox\n\n      if (selected.length <= 0) {\n        els.forEach(function (el) {\n          el.indeterminate = false;\n        });\n        return false;\n      } // count > 0 and count < perPage, set checkbox state to 'indeterminate'\n      else if (selected.length < this.perPage) {\n          els.forEach(function (el) {\n            el.indeterminate = true;\n          });\n          return true;\n        } // count == perPage, set checkbox state to 'checked'\n        else {\n            els.forEach(function (el) {\n              el.indeterminate = false;\n            });\n            return true;\n          }\n    },\n    toggleAllCheckboxes: function toggleAllCheckboxes(fieldName, event) {\n      var self = this;\n      var isChecked = event.target.checked;\n      var idColumn = this.trackBy;\n\n      if (isChecked) {\n        this.tableData.forEach(function (dataItem) {\n          self.selectId(dataItem[idColumn]);\n        });\n      } else {\n        this.tableData.forEach(function (dataItem) {\n          self.unselectId(dataItem[idColumn]);\n        });\n      }\n\n      this.$emit('vuetable:checkbox-toggled-all', isChecked);\n    },\n    gotoPreviousPage: function gotoPreviousPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n        this.loadData();\n      }\n    },\n    gotoNextPage: function gotoNextPage() {\n      if (this.currentPage < this.tablePagination.last_page) {\n        this.currentPage++;\n        this.loadData();\n      }\n    },\n    gotoPage: function gotoPage(page) {\n      if (page != this.currentPage && page > 0 && page <= this.tablePagination.last_page) {\n        this.currentPage = page;\n        this.loadData();\n      }\n    },\n    isVisibleDetailRow: function isVisibleDetailRow(rowId) {\n      return this.visibleDetailRows.indexOf(rowId) >= 0;\n    },\n    showDetailRow: function showDetailRow(rowId) {\n      if (!this.isVisibleDetailRow(rowId)) {\n        this.visibleDetailRows.push(rowId);\n      }\n    },\n    hideDetailRow: function hideDetailRow(rowId) {\n      if (this.isVisibleDetailRow(rowId)) {\n        this.visibleDetailRows.splice(this.visibleDetailRows.indexOf(rowId), 1);\n      }\n    },\n    toggleDetailRow: function toggleDetailRow(rowId) {\n      if (this.isVisibleDetailRow(rowId)) {\n        this.hideDetailRow(rowId);\n      } else {\n        this.showDetailRow(rowId);\n      }\n    },\n    showField: function showField(index) {\n      if (index < 0 || index > this.tableFields.length) return;\n      this.tableFields[index].visible = true;\n    },\n    hideField: function hideField(index) {\n      if (index < 0 || index > this.tableFields.length) return;\n      this.tableFields[index].visible = false;\n    },\n    toggleField: function toggleField(index) {\n      if (index < 0 || index > this.tableFields.length) return;\n      this.tableFields[index].visible = !this.tableFields[index].visible;\n    },\n    renderIconTag: function renderIconTag(classes) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      return typeof this.css.renderIcon === 'undefined' ? \"<i class=\\\"\".concat(classes.join(' '), \"\\\" \").concat(options, \"></i>\") : this.css.renderIcon(classes, options);\n    },\n    makePagination: function makePagination() {\n      var total = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var perPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var currentPage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var pagination = {};\n      total = total === null ? this.dataTotal : total;\n      perPage = perPage === null ? this.perPage : perPage;\n      currentPage = currentPage === null ? this.currentPage : currentPage;\n      return {\n        'total': total,\n        'per_page': perPage,\n        'current_page': currentPage,\n        'last_page': Math.ceil(total / perPage) || 0,\n        'next_page_url': '',\n        'prev_page_url': '',\n        'from': (currentPage - 1) * perPage + 1,\n        'to': Math.min(currentPage * perPage, total)\n      };\n    },\n    normalizeSortOrder: function normalizeSortOrder() {\n      this.sortOrder.forEach(function (item) {\n        item.sortField = item.sortField || item.field;\n      });\n    },\n    callDataManager: function callDataManager() {\n      if (this.dataManager === null && this.data === null) return;\n\n      if (Array.isArray(this.data)) {\n        return this.setData(this.data);\n      }\n\n      this.normalizeSortOrder();\n      return this.setData(this.dataManager ? this.dataManager(this.sortOrder, this.makePagination()) : this.data);\n    },\n    onRowClass: function onRowClass(dataItem, index) {\n      if (this.rowClassCallback !== '') {\n        this.warn('\"row-class-callback\" prop is deprecated, please use \"row-class\" prop instead.');\n        return;\n      }\n\n      if (typeof this.rowClass === 'function') {\n        return this.rowClass(dataItem, index);\n      }\n\n      return this.rowClass;\n    },\n    onRowChanged: function onRowChanged(dataItem) {\n      this.fireEvent('row-changed', dataItem);\n      return true;\n    },\n    onRowClicked: function onRowClicked(dataItem, event) {\n      this.$emit(this.eventPrefix + 'row-clicked', dataItem, event);\n      return true;\n    },\n    onRowDoubleClicked: function onRowDoubleClicked(dataItem, event) {\n      this.$emit(this.eventPrefix + 'row-dblclicked', dataItem, event);\n    },\n    onDetailRowClick: function onDetailRowClick(dataItem, event) {\n      this.$emit(this.eventPrefix + 'detail-row-clicked', dataItem, event);\n    },\n    onCellClicked: function onCellClicked(dataItem, field, event) {\n      this.$emit(this.eventPrefix + 'cell-clicked', dataItem, field, event);\n    },\n    onCellDoubleClicked: function onCellDoubleClicked(dataItem, field, event) {\n      this.$emit(this.eventPrefix + 'cell-dblclicked', dataItem, field, event);\n    },\n    onCellRightClicked: function onCellRightClicked(dataItem, field, event) {\n      this.$emit(this.eventPrefix + 'cell-rightclicked', dataItem, field, event);\n    },\n\n    /*\r\n     * API for externals\r\n     */\n    changePage: function changePage(page) {\n      if (page === 'prev') {\n        this.gotoPreviousPage();\n      } else if (page === 'next') {\n        this.gotoNextPage();\n      } else {\n        this.gotoPage(page);\n      }\n    },\n    reload: function reload() {\n      return this.loadData();\n    },\n    refresh: function refresh() {\n      this.currentPage = 1;\n      return this.loadData();\n    },\n    resetData: function resetData() {\n      this.tableData = null;\n      this.tablePagination = null;\n      this.fireEvent('data-reset');\n    }\n  },\n  // end: methods\n  watch: {\n    'multiSort': function multiSort(newVal, oldVal) {\n      if (newVal === false && this.sortOrder.length > 1) {\n        this.sortOrder.splice(1);\n        this.loadData();\n      }\n    },\n    'apiUrl': function apiUrl(newVal, oldVal) {\n      if (this.reactiveApiUrl && newVal !== oldVal) this.refresh();\n    },\n    'data': function data(newVal, oldVal) {\n      this.setData(newVal);\n    },\n    'tableHeight': function tableHeight(newVal, oldVal) {\n      this.fixHeader();\n    }\n  }\n};",{"version":3,"sources":["Vuetable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n<div v-if=\"isFixedHeader\">\r\n  <div class=\"vuetable-head-wrapper\">\r\n    <table :class=\"['vuetable', css.tableClass, css.tableHeaderClass]\">\r\n    <thead>\r\n      <tr>\r\n        <template v-for=\"(field, fieldIndex) in tableFields\">\r\n          <template v-if=\"field.visible\">\r\n            <template v-if=\"isSpecialField(field.name)\">\r\n              <th v-if=\"extractName(field.name) == '__checkbox'\"\r\n                :key=\"fieldIndex\"\r\n                :style=\"{width: field.width}\"\r\n                :class=\"['vuetable-th-checkbox-'+trackBy, field.titleClass]\"\r\n              >\r\n                <input type=\"checkbox\" @change=\"toggleAllCheckboxes(field.name, $event)\"\r\n                  :checked=\"checkCheckboxesState(field.name)\">\r\n              </th>\r\n              <th v-if=\"extractName(field.name) == '__component'\"\r\n                :key=\"fieldIndex\"\r\n                :style=\"{width: field.width}\"\r\n                :class=\"['vuetable-th-component-'+trackBy, field.titleClass, sortClass(field), {'sortable': isSortable(field)}]\"\r\n                v-html=\"renderTitle(field)\"\r\n                @click=\"orderBy(field, $event)\"\r\n              ></th>\r\n              <th v-if=\"extractName(field.name) == '__slot'\"\r\n                :key=\"fieldIndex\"\r\n                :style=\"{width: field.width}\"\r\n                :class=\"['vuetable-th-slot-'+extractArgs(field.name), field.titleClass, sortClass(field), {'sortable': isSortable(field)}]\"\r\n                v-html=\"renderTitle(field)\"\r\n                @click=\"orderBy(field, $event)\"\r\n              ></th>\r\n              <th v-if=\"extractName(field.name) == '__sequence'\"\r\n                :key=\"fieldIndex\"\r\n                :style=\"{width: field.width}\"\r\n                :class=\"['vuetable-th-sequence', field.titleClass || '']\" v-html=\"renderTitle(field)\">\r\n              </th>\r\n              <th v-if=\"notIn(extractName(field.name), ['__sequence', '__checkbox', '__component', '__slot'])\"\r\n                :key=\"fieldIndex\"\r\n                :style=\"{width: field.width}\"\r\n                :class=\"['vuetable-th-'+field.name, field.titleClass || '']\" v-html=\"renderTitle(field)\">\r\n              </th>\r\n            </template>\r\n            <template v-else>\r\n              <th @click=\"orderBy(field, $event)\"\r\n                :key=\"fieldIndex\"\r\n                :id=\"'_' + field.name\"\r\n                :style=\"{width: field.width}\"\r\n                :class=\"['vuetable-th-'+field.name, field.titleClass, sortClass(field), {'sortable': isSortable(field)}]\"\r\n                v-html=\"renderTitle(field)\"\r\n              ></th>\r\n            </template>\r\n          </template>\r\n        </template>\r\n        <th v-if=\"scrollVisible\" :style=\"{width: scrollBarWidth}\" class=\"vuetable-gutter-col\"></th>\r\n      </tr>\r\n    </thead>\r\n    </table>\r\n  </div>\r\n  <div class=\"vuetable-body-wrapper\" :style=\"{height: tableHeight}\">\r\n    <table :class=\"['vuetable', css.tableClass, css.tableBodyClass]\">\r\n      <colgroup>\r\n        <template v-for=\"(field, fieldIndex) in tableFields\">\r\n          <template v-if=\"field.visible\">\r\n            <col\r\n              :key=\"fieldIndex\"\r\n              :id=\"'_col_' + field.name\"\r\n              :style=\"{width: field.width}\"\r\n              :class=\"['vuetable-th-'+field.name, field.titleClass]\"\r\n            />\r\n          </template>\r\n        </template>\r\n      </colgroup>\r\n      <tbody v-cloak class=\"vuetable-body\">\r\n        <template v-for=\"(item, itemIndex) in tableData\">\r\n          <tr \r\n            :key=\"itemIndex\"\r\n            :item-index=\"itemIndex\" \r\n            :render=\"onRowChanged(item)\" \r\n            :class=\"onRowClass(item, itemIndex)\"\r\n            @click=\"onRowClicked(item, $event)\" \r\n            @dblclick=\"onRowDoubleClicked(item, $event)\" \r\n          >\r\n            <template v-for=\"(field, fieldIndex) in tableFields\">\r\n              <template v-if=\"field.visible\">\r\n                <template v-if=\"isSpecialField(field.name)\">\r\n                  <td v-if=\"extractName(field.name) == '__sequence'\" \r\n                    :key=\"fieldIndex\"\r\n                    :class=\"['vuetable-sequence', field.dataClass]\"\r\n                    v-html=\"renderSequence(itemIndex)\">\r\n                  </td>\r\n                  <td v-if=\"extractName(field.name) == '__handle'\" \r\n                    :key=\"fieldIndex\"\r\n                    :class=\"['vuetable-handle', field.dataClass]\"\r\n                    v-html=\"renderIconTag(['handle-icon', css.handleIcon])\"\r\n                  ></td>\r\n                  <td v-if=\"extractName(field.name) == '__checkbox'\" \r\n                    :key=\"fieldIndex\"\r\n                    :class=\"['vuetable-checkboxes', field.dataClass]\"\r\n                  >\r\n                    <input type=\"checkbox\"\r\n                      @change=\"toggleCheckbox(item, field.name, $event)\"\r\n                      :checked=\"rowSelected(item, field.name)\">\r\n                  </td>\r\n                  <td v-if=\"extractName(field.name) === '__component'\" \r\n                    :key=\"fieldIndex\"\r\n                    :class=\"['vuetable-component', field.dataClass]\"\r\n                  >\r\n                    <component :is=\"extractArgs(field.name)\"\r\n                      :row-data=\"item\" :row-index=\"itemIndex\" :row-field=\"field.sortField\"\r\n                    ></component>\r\n                  </td>\r\n                  <td v-if=\"extractName(field.name) === '__slot'\" \r\n                    :key=\"fieldIndex\"\r\n                    :class=\"['vuetable-slot', field.dataClass]\"\r\n                  >\r\n                    <slot :name=\"extractArgs(field.name)\"\r\n                      :row-data=\"item\" :row-index=\"itemIndex\" :row-field=\"field.sortField\"\r\n                    ></slot>\r\n                  </td>\r\n                </template>\r\n                <template v-else>\r\n                  <td :class=\"field.dataClass\"\r\n                    :key=\"fieldIndex\"\r\n                    v-html=\"renderNormalField(field, item)\"\r\n                    @click=\"onCellClicked(item, field, $event)\"\r\n                    @dblclick=\"onCellDoubleClicked(item, field, $event)\"\r\n                    @contextmenu=\"onCellRightClicked(item, field, $event)\"\r\n                  ></td>\r\n                </template>\r\n              </template>\r\n            </template>\r\n          </tr>\r\n          <template v-if=\"useDetailRow\">\r\n            <transition :name=\"detailRowTransition\" :key=\"itemIndex\">\r\n              <tr v-if=\"isVisibleDetailRow(item[trackBy])\"\r\n                :class=\"[css.detailRowClass]\"\r\n                @click=\"onDetailRowClick(item, $event)\"\r\n              >\r\n                <td :colspan=\"countVisibleFields\">\r\n                  <component :is=\"detailRowComponent\" :row-data=\"item\" :row-index=\"itemIndex\"></component>\r\n                </td>\r\n              </tr>\r\n            </transition>\r\n          </template>\r\n        </template>\r\n        <template v-if=\"displayEmptyDataRow\">\r\n          <tr>\r\n            <td :colspan=\"countVisibleFields\" class=\"vuetable-empty-result\" v-html=\"noDataTemplate\"></td>\r\n          </tr>\r\n        </template>\r\n        <template v-if=\"lessThanMinRows\">\r\n          <tr v-for=\"i in blankRows\" class=\"blank-row\" :key=\"i\">\r\n            <template v-for=\"(field, fieldIndex) in tableFields\">\r\n              <td v-if=\"field.visible\" :key=\"fieldIndex\">&nbsp;</td>\r\n            </template>\r\n          </tr>\r\n        </template>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n<table v-else :class=\"['vuetable', css.tableClass]\"> <!-- no fixed header - regular table -->\r\n  <thead>\r\n    <tr>\r\n      <template v-for=\"(field, fieldIndex) in tableFields\">\r\n        <template v-if=\"field.visible\">\r\n          <template v-if=\"isSpecialField(field.name)\">\r\n            <th v-if=\"extractName(field.name) == '__checkbox'\"\r\n              :key=\"fieldIndex\"\r\n              :style=\"{width: field.width}\"\r\n              :class=\"['vuetable-th-checkbox-'+trackBy, field.titleClass]\"\r\n            >\r\n              <input type=\"checkbox\" @change=\"toggleAllCheckboxes(field.name, $event)\"\r\n                :checked=\"checkCheckboxesState(field.name)\">\r\n            </th>\r\n            <th v-if=\"extractName(field.name) == '__component'\"\r\n              :key=\"fieldIndex\"\r\n              :style=\"{width: field.width}\"\r\n              :class=\"['vuetable-th-component-'+trackBy, field.titleClass, sortClass(field), {'sortable': isSortable(field)}]\"\r\n              v-html=\"renderTitle(field)\"\r\n              @click=\"orderBy(field, $event)\"\r\n            ></th>\r\n            <th v-if=\"extractName(field.name) == '__slot'\"\r\n              :key=\"fieldIndex\"\r\n              :style=\"{width: field.width}\"\r\n              :class=\"['vuetable-th-slot-'+extractArgs(field.name), field.titleClass, sortClass(field), {'sortable': isSortable(field)}]\"\r\n              v-html=\"renderTitle(field)\"\r\n              @click=\"orderBy(field, $event)\"\r\n            ></th>\r\n            <th v-if=\"extractName(field.name) == '__sequence'\"\r\n              :key=\"fieldIndex\"\r\n              :style=\"{width: field.width}\"\r\n              :class=\"['vuetable-th-sequence', field.titleClass || '', sortClass(field)]\" v-html=\"renderTitle(field)\"\r\n            ></th>\r\n            <th v-if=\"notIn(extractName(field.name), ['__sequence', '__checkbox', '__component', '__slot'])\"\r\n              :key=\"fieldIndex\"\r\n              :style=\"{width: field.width}\"\r\n              :class=\"['vuetable-th-'+field.name, field.titleClass || '', sortClass(field)]\" v-html=\"renderTitle(field)\"\r\n            ></th>\r\n          </template>\r\n          <template v-else>\r\n            <th @click=\"orderBy(field, $event)\"\r\n              :key=\"fieldIndex\"\r\n              :id=\"'_' + field.name\"\r\n              :style=\"{width: field.width}\"\r\n              :class=\"['vuetable-th-'+field.name, field.titleClass, sortClass(field),  {'sortable': isSortable(field)}]\"\r\n              v-html=\"renderTitle(field)\"\r\n            ></th>\r\n          </template>\r\n        </template>\r\n      </template>\r\n    </tr>\r\n  </thead>\r\n  <tbody v-cloak class=\"vuetable-body\">\r\n    <template v-for=\"(item, itemIndex) in tableData\">\r\n      <tr @dblclick=\"onRowDoubleClicked(item, $event)\" \r\n        :key=\"itemIndex\"\r\n        :item-index=\"itemIndex\" \r\n        :render=\"onRowChanged(item)\" \r\n        :class=\"onRowClass(item, itemIndex)\"\r\n        @click=\"onRowClicked(item, $event)\" \r\n      >\r\n        <template v-for=\"(field, fieldIndex) in tableFields\">\r\n          <template v-if=\"field.visible\">\r\n            <template v-if=\"isSpecialField(field.name)\">\r\n              <td v-if=\"extractName(field.name) == '__sequence'\" \r\n                :key=\"fieldIndex\"\r\n                :class=\"['vuetable-sequence', field.dataClass]\"\r\n                v-html=\"renderSequence(itemIndex)\"\r\n              ></td>\r\n              <td v-if=\"extractName(field.name) == '__handle'\" \r\n                :key=\"fieldIndex\"\r\n                :class=\"['vuetable-handle', field.dataClass]\"\r\n                v-html=\"renderIconTag(['handle-icon', css.handleIcon])\"\r\n              ></td>\r\n              <td v-if=\"extractName(field.name) == '__checkbox'\" \r\n                :key=\"fieldIndex\"\r\n                :class=\"['vuetable-checkboxes', field.dataClass]\"\r\n              >\r\n                <input type=\"checkbox\"\r\n                  @change=\"toggleCheckbox(item, field.name, $event)\"\r\n                  :checked=\"rowSelected(item, field.name)\">\r\n              </td>\r\n              <td v-if=\"extractName(field.name) === '__component'\" \r\n                :key=\"fieldIndex\"\r\n                :class=\"['vuetable-component', field.dataClass]\"\r\n              >\r\n                <component :is=\"extractArgs(field.name)\"\r\n                  :row-data=\"item\" :row-index=\"itemIndex\" :row-field=\"field.sortField\"\r\n                ></component>\r\n              </td>\r\n              <td v-if=\"extractName(field.name) === '__slot'\" \r\n                :key=\"fieldIndex\"\r\n                :class=\"['vuetable-slot', field.dataClass]\"\r\n              >\r\n                <slot :name=\"extractArgs(field.name)\"\r\n                  :row-data=\"item\" :row-index=\"itemIndex\" :row-field=\"field.sortField\"\r\n                ></slot>\r\n              </td>\r\n            </template>\r\n            <template v-else>\r\n              <td v-if=\"hasCallback(field)\" \r\n                :key=\"fieldIndex\"\r\n                :class=\"field.dataClass\"\r\n                v-html=\"callCallback(field, item)\"\r\n                @click=\"onCellClicked(item, field, $event)\"\r\n                @dblclick=\"onCellDoubleClicked(item, field, $event)\"\r\n                @contextmenu=\"onCellRightClicked(item, field, $event)\"\r\n              ></td>\r\n              <td v-else \r\n                :key=\"fieldIndex\"\r\n                :class=\"field.dataClass\"\r\n                v-html=\"getObjectValue(item, field.name, '')\"\r\n                @click=\"onCellClicked(item, field, $event)\"\r\n                @dblclick=\"onCellDoubleClicked(item, field, $event)\"\r\n                @contextmenu=\"onCellRightClicked(item, field, $event)\"\r\n              ></td>\r\n            </template>\r\n          </template>\r\n        </template>\r\n      </tr>\r\n      <template v-if=\"useDetailRow\">\r\n        <transition :name=\"detailRowTransition\" :key=\"itemIndex\">\r\n          <tr v-if=\"isVisibleDetailRow(item[trackBy])\"\r\n            :class=\"[css.detailRowClass]\"\r\n            @click=\"onDetailRowClick(item, $event)\"\r\n          >\r\n            <td :colspan=\"countVisibleFields\">\r\n              <component :is=\"detailRowComponent\" :row-data=\"item\" :row-index=\"itemIndex\"></component>\r\n            </td>\r\n          </tr>\r\n        </transition>\r\n      </template>\r\n    </template>\r\n    <template v-if=\"displayEmptyDataRow\">\r\n      <tr>\r\n        <td :colspan=\"countVisibleFields\" class=\"vuetable-empty-result\" v-html=\"noDataTemplate\"></td>\r\n      </tr>\r\n    </template>\r\n    <template v-if=\"lessThanMinRows\">\r\n      <tr v-for=\"i in blankRows\" class=\"blank-row\" :key=\"i\">\r\n        <template v-for=\"(field, fieldIndex) in tableFields\">\r\n          <td v-if=\"field.visible\" :key=\"fieldIndex\">&nbsp;</td>\r\n        </template>\r\n      </tr>\r\n    </template>\r\n  </tbody>\r\n</table>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  props: {\r\n    fields: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    loadOnStart: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    apiUrl: {\r\n        type: String,\r\n        default: ''\r\n    },\r\n    httpMethod: {\r\n        type: String,\r\n        default: 'get',\r\n        validator: (value) => {\r\n          return ['get', 'post'].indexOf(value) > -1\r\n        }\r\n    },\r\n    reactiveApiUrl: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    apiMode: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    data: {\r\n      type: [Array, Object],\r\n      default: null\r\n    },\r\n    dataTotal: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    dataManager: {\r\n      type: Function,\r\n      default: null\r\n    },\r\n    dataPath: {\r\n        type: String,\r\n        default: 'data'\r\n    },\r\n    paginationPath: {\r\n        type: [String],\r\n        default: 'links.pagination'\r\n    },\r\n    queryParams: {\r\n      type: [Object, Function],\r\n      default () {\r\n        return {\r\n          sort: 'sort',\r\n          page: 'page',\r\n          perPage: 'per_page'\r\n        }\r\n      }\r\n    },\r\n    appendParams: {\r\n      type: Object,\r\n      default () {\r\n        return {}\r\n      }\r\n    },\r\n    httpOptions: {\r\n      type: Object,\r\n      default () {\r\n        return {}\r\n      }\r\n    },\r\n    httpFetch: {\r\n      type: Function,\r\n      default: null\r\n    },\r\n    perPage: {\r\n        type: Number,\r\n        default: 10\r\n    },\r\n    initialPage: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    sortOrder: {\r\n      type: Array,\r\n      default () {\r\n        return []\r\n      }\r\n    },\r\n    multiSort: {\r\n      type: Boolean,\r\n      default () {\r\n        return false\r\n      }\r\n    },\r\n    tableHeight: {\r\n      type: String,\r\n      default: null\r\n    },\r\n    /*\r\n     * physical key that will trigger multi-sort option\r\n     * possible values: 'alt', 'ctrl', 'meta', 'shift'\r\n     * 'ctrl' might not work as expected on Mac\r\n     */\r\n    multiSortKey: {\r\n      type: String,\r\n      default: 'alt'\r\n    },\r\n    /* deprecated */\r\n    rowClassCallback: {\r\n      type: [String, Function],\r\n      default: ''\r\n    },\r\n    rowClass: {\r\n      type: [String, Function],\r\n      default: ''\r\n    },\r\n    detailRowComponent: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    detailRowTransition: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    trackBy: {\r\n      type: String,\r\n      default: 'id'\r\n    },\r\n    css: {\r\n      type: Object,\r\n      default () {\r\n        return {\r\n          tableClass: 'ui blue selectable celled stackable attached table',\r\n          loadingClass: 'loading',\r\n          ascendingIcon: 'blue chevron up icon',\r\n          descendingIcon: 'blue chevron down icon',\r\n          ascendingClass: 'sorted-asc',\r\n          descendingClass: 'sorted-desc',\r\n          sortableIcon: '',\r\n          detailRowClass: 'vuetable-detail-row',\r\n          handleIcon: 'grey sidebar icon',\r\n          tableBodyClass: 'vuetable-semantic-no-top vuetable-fixed-layout',\r\n          tableHeaderClass: 'vuetable-fixed-layout'\r\n        }\r\n      }\r\n    },\r\n    minRows: {\r\n      type: Number,\r\n      default: 0\r\n    },\r\n    silent: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    noDataTemplate: {\r\n      type: String,\r\n      default() {\r\n        return 'No Data Available'\r\n      }\r\n    },\r\n    showSortIcons: {\r\n      type: Boolean,\r\n      default: true\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      eventPrefix: 'vuetable:',\r\n      tableFields: [],\r\n      tableData: null,\r\n      tablePagination: null,\r\n      currentPage: this.initialPage,\r\n      selectedTo: [],\r\n      visibleDetailRows: [],\r\n      lastScrollPosition: 0,\r\n      scrollBarWidth: '17px', //chrome default\r\n      scrollVisible: false,\r\n    }\r\n  },\r\n  mounted () {\r\n    this.normalizeFields()\r\n    this.normalizeSortOrder()\r\n    if (this.isFixedHeader) {\r\n      this.scrollBarWidth = this.getScrollBarWidth() + 'px';\r\n    }\r\n    this.$nextTick(function() {\r\n      this.fireEvent('initialized', this.tableFields)\r\n    })\r\n\r\n    if (this.loadOnStart) {\r\n      this.loadData()\r\n    }\r\n    if (this.isFixedHeader) {\r\n      let elem = this.$el.getElementsByClassName('vuetable-body-wrapper')[0];\r\n      if (elem != null) {\r\n        elem.addEventListener('scroll', this.handleScroll);\r\n      }\r\n    }\r\n  },\r\n  destroyed () {\r\n    let elem = this.$el.getElementsByClassName('vuetable-body-wrapper')[0];\r\n    if (elem != null) {\r\n      elem.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n  },\r\n  computed: {\r\n    version: () => VERSION,\r\n    useDetailRow () {\r\n      if (this.tableData && this.tableData[0] && this.detailRowComponent !== '' && typeof this.tableData[0][this.trackBy] === 'undefined') {\r\n        this.warn('You need to define unique row identifier in order for detail-row feature to work. Use `track-by` prop to define one!')\r\n        return false\r\n      }\r\n\r\n      return this.detailRowComponent !== ''\r\n    },\r\n    countVisibleFields () {\r\n      return this.tableFields.filter(function(field) {\r\n        return field.visible\r\n      }).length\r\n    },\r\n    countTableData () {\r\n      if (this.tableData === null) {\r\n        return 0\r\n      }\r\n      return this.tableData.length\r\n    },\r\n    displayEmptyDataRow () {\r\n      return this.countTableData === 0 && this.noDataTemplate.length > 0\r\n    },\r\n    lessThanMinRows () {\r\n      if (this.tableData === null || this.tableData.length === 0) {\r\n        return true\r\n      }\r\n      return this.tableData.length < this.minRows\r\n    },\r\n    blankRows () {\r\n      if (this.tableData === null || this.tableData.length === 0) {\r\n        return this.minRows\r\n      }\r\n      if (this.tableData.length >= this.minRows) {\r\n        return 0\r\n      }\r\n\r\n      return this.minRows - this.tableData.length\r\n    },\r\n    isApiMode () {\r\n      return this.apiMode\r\n    },\r\n    isDataMode () {\r\n      return ! this.apiMode\r\n    },\r\n    isFixedHeader () {\r\n      return this.tableHeight != null\r\n    }\r\n  },\r\n  methods: {\r\n    getScrollBarWidth () {\r\n      const outer = document.createElement('div');\r\n      const inner = document.createElement('div');\r\n\r\n      outer.style.visibility = 'hidden';\r\n      outer.style.width = '100px';\r\n\r\n      inner.style.width = '100%';\r\n\r\n\r\n      outer.appendChild(inner);\r\n      document.body.appendChild(outer);\r\n\r\n\r\n      const widthWithoutScrollbar = outer.offsetWidth;\r\n\r\n      outer.style.overflow = 'scroll';\r\n\r\n      const widthWithScrollbar = inner.offsetWidth;\r\n\r\n\r\n      document.body.removeChild(outer);\r\n\r\n\r\n      return (widthWithoutScrollbar - widthWithScrollbar);\r\n    },\r\n    handleScroll (e) { //make sure that the header and the body are aligned when scrolling horizontally on a table that is wider than the viewport\r\n      let horizontal = e.currentTarget.scrollLeft;\r\n      if (horizontal != this.lastScrollPosition) { //don't modify header scroll if we are scrolling vertically\r\n        let header = this.$el.getElementsByClassName('vuetable-head-wrapper')[0]\r\n        if (header != null) {\r\n          header.scrollLeft = horizontal;\r\n        }\r\n        this.lastScrollPosition = horizontal;\r\n      }\r\n\r\n    },\r\n    normalizeFields () {\r\n      if (typeof(this.fields) === 'undefined') {\r\n        this.warn('You need to provide \"fields\" prop.')\r\n        return\r\n      }\r\n\r\n      this.tableFields = []\r\n      let self = this\r\n      let obj\r\n      this.fields.forEach(function(field, i) {\r\n        if (typeof (field) === 'string') {\r\n          obj = {\r\n            name: field,\r\n            title: self.setTitle(field),\r\n            titleClass: '',\r\n            dataClass: '',\r\n            callback: null,\r\n            visible: true,\r\n          }\r\n        } else {\r\n          obj = {\r\n            name: field.name,\r\n            width: field.width,\r\n            title: (field.title === undefined) ? self.setTitle(field.name) : field.title,\r\n            sortField: field.sortField,\r\n            titleClass: (field.titleClass === undefined) ? '' : field.titleClass,\r\n            dataClass: (field.dataClass === undefined) ? '' : field.dataClass,\r\n            callback: (field.callback === undefined) ? '' : field.callback,\r\n            visible: (field.visible === undefined) ? true : field.visible,\r\n          }\r\n        }\r\n        self.tableFields.push(obj)\r\n      })\r\n    },\r\n    setData (data) {\r\n      if (data === null || typeof(data) === 'undefined') return\r\n\r\n      this.fireEvent('loading')\r\n\r\n      if (Array.isArray(data)) {\r\n        this.tableData = data\r\n        this.fireEvent('loaded')\r\n        return\r\n      }\r\n\r\n      this.tableData = this.getObjectValue(data, this.dataPath, null)\r\n      this.tablePagination = this.getObjectValue(data, this.paginationPath, null)\r\n\r\n      this.$nextTick(function() {\r\n        this.fixHeader()\r\n        this.fireEvent('pagination-data', this.tablePagination)\r\n        this.fireEvent('loaded')\r\n      })\r\n    },\r\n    setTitle (str) {\r\n      if (this.isSpecialField(str)) {\r\n        return ''\r\n      }\r\n\r\n      return this.titleCase(str)\r\n    },\r\n    getTitle (field) {\r\n      if (typeof(field.title) === 'function') return field.title()\r\n\r\n      return typeof(field.title) === 'undefined'\r\n        ? field.name.replace('.', ' ')\r\n        : field.title\r\n    },\r\n    renderTitle (field) {\r\n      let title = this.getTitle(field)\r\n\r\n      if (title.length > 0 && this.isInCurrentSortGroup(field) || this.hasSortableIcon(field)) {\r\n        let style = `opacity:${this.sortIconOpacity(field)};position:relative;float:right`\r\n        let iconTag = this.showSortIcons ? this.renderIconTag(['sort-icon', this.sortIcon(field)], `style=\"${style}\"`) : ''\r\n        return title + ' ' + iconTag\r\n      }\r\n\r\n      return title\r\n    },\r\n    renderSequence (index) {\r\n      return this.tablePagination\r\n        ? this.tablePagination.from + index\r\n        : index\r\n    },\r\n    renderNormalField (field, item) {\r\n      return this.hasCallback(field)\r\n        ? this.callCallback(field, item)\r\n        : this.getObjectValue(item, field.name, '')\r\n    },\r\n    isSpecialField (fieldName) {\r\n      return fieldName.slice(0, 2) === '__'\r\n    },\r\n    titleCase (str) {\r\n      return str.replace(/\\w+/g, function(txt) {\r\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\r\n      })\r\n    },\r\n    camelCase (str, delimiter = '_') {\r\n      let self = this\r\n      return str.split(delimiter).map(function(item) {\r\n        return self.titleCase(item)\r\n      }).join('')\r\n    },\r\n    notIn (str, arr) {\r\n      return arr.indexOf(str) === -1\r\n    },\r\n    loadData (success = this.loadSuccess, failed = this.loadFailed) {\r\n      if (this.isDataMode) {\r\n        this.callDataManager()\r\n        return\r\n      }\r\n\r\n      this.fireEvent('loading')\r\n\r\n      this.httpOptions['params'] = this.getAppendParams( this.getAllQueryParams() )\r\n\r\n      return this.fetch(this.apiUrl, this.httpOptions).then(\r\n          success,\r\n          failed\r\n      ).catch(() => failed())\r\n    },\r\n    fetch (apiUrl, httpOptions) {\r\n      return this.httpFetch\r\n          ? this.httpFetch(apiUrl, httpOptions)\r\n          : axios[this.httpMethod](apiUrl, httpOptions)\r\n    },\r\n    loadSuccess (response) {\r\n      this.fireEvent('load-success', response)\r\n\r\n      let body = this.transform(response.data)\r\n\r\n      this.tableData = this.getObjectValue(body, this.dataPath, null)\r\n      this.tablePagination = this.getObjectValue(body, this.paginationPath, null)\r\n\r\n      if (this.tablePagination === null) {\r\n        this.warn('vuetable: pagination-path \"' + this.paginationPath + '\" not found. '\r\n          + 'It looks like the data returned from the sever does not have pagination information '\r\n          + \"or you may have set it incorrectly.\\n\"\r\n          + 'You can explicitly suppress this warning by setting pagination-path=\"\".'\r\n        )\r\n      }\r\n\r\n      this.$nextTick(function() {\r\n        this.fixHeader()\r\n        this.fireEvent('pagination-data', this.tablePagination)\r\n        this.fireEvent('loaded')\r\n      })\r\n    },\r\n    fixHeader() {\r\n      if (!this.isFixedHeader) {\r\n        return;\r\n      }\r\n\r\n      let elem = this.$el.getElementsByClassName('vuetable-body-wrapper')[0]\r\n      if (elem != null) {\r\n        if (elem.scrollHeight > elem.clientHeight) {\r\n          this.scrollVisible = true;\r\n        }\r\n        else {\r\n          this.scrollVisible = false;\r\n        }\r\n      }\r\n    },\r\n    loadFailed (response) {\r\n      console.error('load-error', response)\r\n      this.fireEvent('load-error', response)\r\n      this.fireEvent('loaded')\r\n    },\r\n    transform (data) {\r\n      let func = 'transform'\r\n\r\n      if (this.parentFunctionExists(func)) {\r\n          return this.$parent[func].call(this.$parent, data)\r\n      }\r\n\r\n      return data\r\n    },\r\n    parentFunctionExists (func) {\r\n      return (func !== '' && typeof this.$parent[func] === 'function')\r\n    },\r\n    callParentFunction (func, args, defaultValue = null) {\r\n      if (this.parentFunctionExists(func)) {\r\n        return this.$parent[func].call(this.$parent, args)\r\n      }\r\n\r\n      return defaultValue\r\n    },\r\n    fireEvent (eventName, args) {\r\n      this.$emit(this.eventPrefix + eventName, args)\r\n    },\r\n    warn (msg) {\r\n      if (!this.silent) {\r\n        console.warn(msg)\r\n      }\r\n    },\r\n    getAllQueryParams () {\r\n      let params = {}\r\n\r\n      if (typeof(this.queryParams) === 'function') {\r\n        params = this.queryParams(this.sortOrder, this.currentPage, this.perPage)\r\n        return typeof(params) !== 'object' ? {} : params\r\n      }\r\n\r\n      params[this.queryParams.sort] = this.getSortParam()\r\n      params[this.queryParams.page] = this.currentPage\r\n      params[this.queryParams.perPage] = this.perPage\r\n\r\n      return params\r\n    },\r\n    getSortParam () {\r\n      if (!this.sortOrder || this.sortOrder.field == '') {\r\n        return ''\r\n      }\r\n\r\n      if (typeof this.$parent['getSortParam'] === 'function') {\r\n        return this.$parent['getSortParam'].call(this.$parent, this.sortOrder)\r\n      }\r\n\r\n      return this.getDefaultSortParam()\r\n    },\r\n    getDefaultSortParam () {\r\n      let result = '';\r\n\r\n      for (let i = 0; i < this.sortOrder.length; i++) {\r\n        let fieldName = (typeof this.sortOrder[i].sortField === 'undefined')\r\n          ? this.sortOrder[i].field\r\n          : this.sortOrder[i].sortField;\r\n\r\n        result += fieldName + '|' + this.sortOrder[i].direction + ((i+1) < this.sortOrder.length ? ',' : '');\r\n      }\r\n      return result;\r\n    },\r\n    getAppendParams (params) {\r\n      for (let x in this.appendParams) {\r\n        params[x] = this.appendParams[x]\r\n      }\r\n\r\n      return params\r\n    },\r\n    extractName (string) {\r\n      return string.split(':')[0].trim()\r\n    },\r\n    extractArgs (string) {\r\n      return string.split(':')[1]\r\n    },\r\n    isSortable (field) {\r\n      return !(typeof field.sortField === 'undefined')\r\n    },\r\n    isInCurrentSortGroup (field) {\r\n      return this.currentSortOrderPosition(field) !== false;\r\n    },\r\n    hasSortableIcon (field) {\r\n      return this.isSortable(field) && this.css.sortableIcon != ''\r\n    },\r\n    currentSortOrderPosition (field) {\r\n      if ( ! this.isSortable(field)) {\r\n        return false\r\n      }\r\n\r\n      for (let i = 0; i < this.sortOrder.length; i++) {\r\n        if (this.fieldIsInSortOrderPosition(field, i)) {\r\n          return i;\r\n        }\r\n      }\r\n\r\n      return false;\r\n    },\r\n    fieldIsInSortOrderPosition (field, i) {\r\n      return this.sortOrder[i].field === field.name && this.sortOrder[i].sortField === field.sortField\r\n    },\r\n    orderBy (field, event) {\r\n      if ( ! this.isSortable(field) ) return\r\n\r\n      let key = this.multiSortKey.toLowerCase() + 'Key'\r\n\r\n      if (this.multiSort && event[key]) { //adding column to multisort\r\n        this.multiColumnSort(field)\r\n      } else {\r\n        //no multisort, or resetting sort\r\n        this.singleColumnSort(field)\r\n      }\r\n\r\n      this.currentPage = 1    // reset page index\r\n      if (this.apiMode || this.dataManager) {\r\n        this.loadData()\r\n      }\r\n    },\r\n    multiColumnSort (field) {\r\n      let i = this.currentSortOrderPosition(field);\r\n\r\n      if(i === false) { //this field is not in the sort array yet\r\n        this.sortOrder.push({\r\n          field: field.name,\r\n          sortField: field.sortField,\r\n          direction: 'asc'\r\n        });\r\n      } else { //this field is in the sort array, now we change its state\r\n        if(this.sortOrder[i].direction === 'asc') {\r\n          // switch direction\r\n          this.sortOrder[i].direction = 'desc'\r\n        } else {\r\n          //remove sort condition\r\n          this.sortOrder.splice(i, 1);\r\n        }\r\n      }\r\n    },\r\n    singleColumnSort (field) {\r\n      if (this.sortOrder.length === 0) {\r\n        this.clearSortOrder()\r\n      }\r\n\r\n      this.sortOrder.splice(1); //removes additional columns\r\n\r\n      if (this.fieldIsInSortOrderPosition(field, 0)) {\r\n        // change sort direction\r\n        this.sortOrder[0].direction = this.sortOrder[0].direction === 'asc' ? 'desc' : 'asc'\r\n      } else {\r\n        // reset sort direction\r\n        this.sortOrder[0].direction = 'asc'\r\n      }\r\n      this.sortOrder[0].field = field.name\r\n      this.sortOrder[0].sortField = field.sortField\r\n    },\r\n    clearSortOrder () {\r\n      this.sortOrder.push({\r\n        field: '',\r\n        sortField: '',\r\n        direction: 'asc'\r\n      });\r\n    },\r\n    sortClass (field) {\r\n      let cls = ''\r\n      let i = this.currentSortOrderPosition(field)\r\n\r\n      if (i !== false) {\r\n        cls = (this.sortOrder[i].direction == 'asc') ? this.css.ascendingClass : this.css.descendingClass\r\n      }\r\n\r\n      return cls\r\n    },\r\n    sortIcon (field) {\r\n      let cls = this.css.sortableIcon\r\n      let i = this.currentSortOrderPosition(field)\r\n\r\n      if (i !== false) {\r\n        cls = (this.sortOrder[i].direction == 'asc') ? this.css.ascendingIcon : this.css.descendingIcon\r\n      }\r\n\r\n      return cls;\r\n    },\r\n    sortIconOpacity (field) {\r\n      /*\r\n       * fields with stronger precedence have darker color\r\n       *\r\n       * if there are few fields, we go down by 0.3\r\n       * ex. 2 fields are selected: 1.0, 0.7\r\n       *\r\n       * if there are more we go down evenly on the given spectrum\r\n       * ex. 6 fields are selected: 1.0, 0.86, 0.72, 0.58, 0.44, 0.3\r\n       */\r\n      let max = 1.0,\r\n          min = 0.3,\r\n          step = 0.3\r\n\r\n      let count = this.sortOrder.length;\r\n      let current = this.currentSortOrderPosition(field)\r\n\r\n\r\n      if(max - count * step < min) {\r\n        step = (max - min) / (count-1)\r\n      }\r\n\r\n      let opacity = max - current * step\r\n\r\n      return opacity\r\n    },\r\n    hasCallback (item) {\r\n      return item.callback ? true : false\r\n    },\r\n    callCallback (field, item) {\r\n      if ( ! this.hasCallback(field)) return\r\n\r\n      if(typeof(field.callback) == 'function') {\r\n       return field.callback(this.getObjectValue(item, field.name))\r\n      }\r\n\r\n      let args = field.callback.split('|')\r\n      let func = args.shift()\r\n\r\n      if (typeof this.$parent[func] === 'function') {\r\n        let value = this.getObjectValue(item, field.name)\r\n\r\n        return (args.length > 0)\r\n          ? this.$parent[func].apply(this.$parent, [value].concat(args))\r\n          : this.$parent[func].call(this.$parent, value)\r\n      }\r\n\r\n      return null\r\n    },\r\n    getObjectValue (object, path, defaultValue) {\r\n      defaultValue = (typeof defaultValue === 'undefined') ? null : defaultValue\r\n\r\n      let obj = object\r\n      if (path.trim() != '') {\r\n        let keys = path.split('.')\r\n        keys.forEach(function(key) {\r\n          if (obj !== null && typeof obj[key] !== 'undefined' && obj[key] !== null) {\r\n            obj = obj[key]\r\n          } else {\r\n            obj = defaultValue\r\n            return\r\n          }\r\n        })\r\n      }\r\n      return obj\r\n    },\r\n    toggleCheckbox (dataItem, fieldName, event) {\r\n      let isChecked = event.target.checked\r\n      let idColumn = this.trackBy\r\n\r\n      if (dataItem[idColumn] === undefined) {\r\n        this.warn('__checkbox field: The \"'+this.trackBy+'\" field does not exist! Make sure the field you specify in \"track-by\" prop does exist.')\r\n        return\r\n      }\r\n\r\n      let key = dataItem[idColumn]\r\n      if (isChecked) {\r\n        this.selectId(key)\r\n      } else {\r\n        this.unselectId(key)\r\n      }\r\n      this.$emit('vuetable:checkbox-toggled', isChecked, dataItem)\r\n    },\r\n    selectId (key) {\r\n      if ( ! this.isSelectedRow(key)) {\r\n        this.selectedTo.push(key)\r\n      }\r\n    },\r\n    unselectId (key) {\r\n      this.selectedTo = this.selectedTo.filter(function(item) {\r\n        return item !== key\r\n      })\r\n    },\r\n    isSelectedRow (key) {\r\n      return this.selectedTo.indexOf(key) >= 0\r\n    },\r\n    rowSelected (dataItem, fieldName){\r\n      let idColumn = this.trackBy\r\n      let key = dataItem[idColumn]\r\n\r\n      return this.isSelectedRow(key)\r\n    },\r\n    checkCheckboxesState (fieldName) {\r\n      if (! this.tableData) return\r\n\r\n      let self = this\r\n      let idColumn = this.trackBy\r\n      let selector = 'th.vuetable-th-checkbox-' + idColumn + ' input[type=checkbox]'\r\n      let els = document.querySelectorAll(selector)\r\n\r\n      //fixed:document.querySelectorAll return the typeof nodeList not array\r\n      if (els.forEach===undefined)\r\n        els.forEach=function(cb){\r\n          [].forEach.call(els, cb);\r\n        }\r\n\r\n      // count how many checkbox row in the current page has been checked\r\n      let selected = this.tableData.filter(function(item) {\r\n        return self.selectedTo.indexOf(item[idColumn]) >= 0\r\n      })\r\n\r\n      // count == 0, clear the checkbox\r\n      if (selected.length <= 0) {\r\n        els.forEach(function(el) {\r\n          el.indeterminate = false\r\n        })\r\n        return false\r\n      }\r\n      // count > 0 and count < perPage, set checkbox state to 'indeterminate'\r\n      else if (selected.length < this.perPage) {\r\n        els.forEach(function(el) {\r\n          el.indeterminate = true\r\n        })\r\n        return true\r\n      }\r\n      // count == perPage, set checkbox state to 'checked'\r\n      else {\r\n        els.forEach(function(el) {\r\n          el.indeterminate = false\r\n        })\r\n        return true\r\n      }\r\n    },\r\n    toggleAllCheckboxes (fieldName, event) {\r\n      let self = this\r\n      let isChecked = event.target.checked\r\n      let idColumn = this.trackBy\r\n\r\n      if (isChecked) {\r\n        this.tableData.forEach(function(dataItem) {\r\n          self.selectId(dataItem[idColumn])\r\n        })\r\n      } else {\r\n        this.tableData.forEach(function(dataItem) {\r\n          self.unselectId(dataItem[idColumn])\r\n        })\r\n      }\r\n      this.$emit('vuetable:checkbox-toggled-all', isChecked)\r\n    },\r\n    gotoPreviousPage () {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--\r\n        this.loadData()\r\n      }\r\n    },\r\n    gotoNextPage () {\r\n      if (this.currentPage < this.tablePagination.last_page) {\r\n        this.currentPage++\r\n        this.loadData()\r\n      }\r\n    },\r\n    gotoPage (page) {\r\n      if (page != this.currentPage && (page > 0 && page <= this.tablePagination.last_page)) {\r\n        this.currentPage = page\r\n        this.loadData()\r\n      }\r\n    },\r\n    isVisibleDetailRow (rowId) {\r\n      return this.visibleDetailRows.indexOf( rowId ) >= 0\r\n    },\r\n    showDetailRow (rowId) {\r\n      if (!this.isVisibleDetailRow(rowId)) {\r\n        this.visibleDetailRows.push(rowId)\r\n      }\r\n    },\r\n    hideDetailRow (rowId) {\r\n      if (this.isVisibleDetailRow(rowId)) {\r\n        this.visibleDetailRows.splice(\r\n          this.visibleDetailRows.indexOf(rowId),\r\n          1\r\n        )\r\n      }\r\n    },\r\n    toggleDetailRow (rowId) {\r\n      if (this.isVisibleDetailRow(rowId)) {\r\n        this.hideDetailRow(rowId)\r\n      } else {\r\n        this.showDetailRow(rowId)\r\n      }\r\n    },\r\n    showField (index) {\r\n      if (index < 0 || index > this.tableFields.length) return\r\n\r\n      this.tableFields[index].visible = true\r\n    },\r\n    hideField (index) {\r\n      if (index < 0 || index > this.tableFields.length) return\r\n\r\n      this.tableFields[index].visible = false\r\n    },\r\n    toggleField (index) {\r\n      if (index < 0 || index > this.tableFields.length) return\r\n\r\n      this.tableFields[index].visible = ! this.tableFields[index].visible\r\n    },\r\n    renderIconTag (classes, options = '') {\r\n      return typeof(this.css.renderIcon) === 'undefined'\r\n        ? `<i class=\"${classes.join(' ')}\" ${options}></i>`\r\n        : this.css.renderIcon(classes, options)\r\n    },\r\n    makePagination (total = null, perPage = null, currentPage = null) {\r\n      let pagination = {}\r\n      total = total === null ? this.dataTotal : total\r\n      perPage = perPage === null ? this.perPage : perPage\r\n      currentPage = currentPage === null ? this.currentPage : currentPage\r\n\r\n      return {\r\n        'total': total,\r\n        'per_page': perPage,\r\n        'current_page': currentPage,\r\n        'last_page': Math.ceil(total / perPage) || 0,\r\n        'next_page_url': '',\r\n        'prev_page_url': '',\r\n        'from': (currentPage -1) * perPage +1,\r\n        'to': Math.min(currentPage * perPage, total)\r\n      }\r\n    },\r\n    normalizeSortOrder () {\r\n      this.sortOrder.forEach(function(item) {\r\n        item.sortField = item.sortField || item.field\r\n      })\r\n    },\r\n    callDataManager () {\r\n      if (this.dataManager === null && this.data === null) return\r\n\r\n      if (Array.isArray(this.data)) {\r\n        return this.setData(this.data)\r\n      } \r\n      \r\n      this.normalizeSortOrder()\r\n\r\n      return this.setData(\r\n        this.dataManager\r\n          ? this.dataManager(this.sortOrder, this.makePagination())\r\n          : this.data\r\n      )\r\n    },\r\n    onRowClass (dataItem, index) {\r\n      if (this.rowClassCallback !== '') {\r\n        this.warn('\"row-class-callback\" prop is deprecated, please use \"row-class\" prop instead.')\r\n        return\r\n      }\r\n\r\n      if (typeof(this.rowClass) === 'function') {\r\n        return this.rowClass(dataItem, index)\r\n      }\r\n\r\n      return this.rowClass\r\n    },\r\n    onRowChanged (dataItem) {\r\n      this.fireEvent('row-changed', dataItem)\r\n      return true\r\n    },\r\n    onRowClicked (dataItem, event) {\r\n      this.$emit(this.eventPrefix + 'row-clicked', dataItem, event)\r\n      return true\r\n    },\r\n    onRowDoubleClicked (dataItem, event) {\r\n      this.$emit(this.eventPrefix + 'row-dblclicked', dataItem, event)\r\n    },\r\n    onDetailRowClick (dataItem, event) {\r\n      this.$emit(this.eventPrefix + 'detail-row-clicked', dataItem, event)\r\n    },\r\n    onCellClicked (dataItem, field, event) {\r\n      this.$emit(this.eventPrefix + 'cell-clicked', dataItem, field, event)\r\n    },\r\n    onCellDoubleClicked (dataItem, field, event) {\r\n      this.$emit(this.eventPrefix + 'cell-dblclicked', dataItem, field, event)\r\n    },\r\n    onCellRightClicked (dataItem, field, event) {\r\n      this.$emit(this.eventPrefix + 'cell-rightclicked', dataItem, field, event)\r\n    },\r\n    /*\r\n     * API for externals\r\n     */\r\n    changePage (page) {\r\n      if (page === 'prev') {\r\n        this.gotoPreviousPage()\r\n      } else if (page === 'next') {\r\n        this.gotoNextPage()\r\n      } else {\r\n        this.gotoPage(page)\r\n      }\r\n    },\r\n    reload () {\r\n      return this.loadData()\r\n    },\r\n    refresh () {\r\n      this.currentPage = 1\r\n      return this.loadData()\r\n    },\r\n    resetData () {\r\n      this.tableData = null\r\n      this.tablePagination = null\r\n      this.fireEvent('data-reset')\r\n    }\r\n  }, // end: methods\r\n  watch: {\r\n    'multiSort' (newVal, oldVal) {\r\n      if (newVal === false && this.sortOrder.length > 1) {\r\n        this.sortOrder.splice(1);\r\n        this.loadData();\r\n      }\r\n    },\r\n    'apiUrl'  (newVal, oldVal) {\r\n      if(this.reactiveApiUrl && newVal !== oldVal)\r\n        this.refresh()\r\n    },\r\n    'data' (newVal, oldVal) {\r\n      this.setData(newVal)\r\n    },\r\n    'tableHeight' (newVal, oldVal) {\r\n      this.fixHeader()\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  [v-cloak] {\r\n    display: none;\r\n  }\r\n  .vuetable th.sortable:hover {\r\n    color: #2185d0;\r\n    cursor: pointer;\r\n  }\r\n  .vuetable-body-wrapper {\r\n    position:relative;\r\n    overflow-y:auto;\r\n  }\r\n  .vuetable-head-wrapper {\r\n    overflow-x: hidden;\r\n  }\r\n  .vuetable-actions {\r\n    width: 15%;\r\n    padding: 12px 0px;\r\n    text-align: center;\r\n  }\r\n  .vuetable-pagination {\r\n    background: #f9fafb !important;\r\n  }\r\n  .vuetable-pagination-info {\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n  }\r\n  .vuetable-empty-result {\r\n    text-align: center;\r\n  }\r\n  .vuetable-clip-text {\r\n    white-space: pre-wrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    display: block;\r\n  }\r\n  .vuetable-semantic-no-top {\r\n    border-top:none !important;\r\n    margin-top:0 !important;\r\n  }\r\n  .vuetable-fixed-layout {\r\n    table-layout: fixed;\r\n  }\r\n  .vuetable-gutter-col {\r\n    padding: 0 !important;\r\n    border-left: none  !important;\r\n    border-right: none  !important;\r\n  }\r\n</style>\r\n"],"sourceRoot":"node_modules/vuetable-2/src/components"}]}