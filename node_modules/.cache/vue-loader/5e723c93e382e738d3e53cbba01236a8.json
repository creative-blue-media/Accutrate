{"remainingRequest":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlaheywood/Documents/GitHub/Accutrate/src/views/app/pages/ImageList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/src/views/app/pages/ImageList.vue","mtime":1558175808000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from '@/components/Svg'\r\nimport vSelect from 'vue-select'\r\nimport 'vue-select/dist/vue-select.css'\r\nimport axios from 'axios'\r\n\r\nimport ImageListItem from '@/components/Listing/ImageListItem'\r\nimport ThumbListItem from '@/components/Listing/ThumbListItem'\r\nimport DataListItem from '@/components/Listing/DataListItem'\r\nimport { apiUrl } from '@/constants/config'\r\n\r\nexport default {\r\n  components: {\r\n    DataListIcon,\r\n    ThumbListIcon,\r\n    ImageListIcon,\r\n    vSelect,\r\n    ImageListItem,\r\n    ThumbListItem,\r\n    DataListItem\r\n  },\r\n  data () {\r\n    return {\r\n      isLoad: false,\r\n      apiBase: apiUrl + '/cakes/fordatatable',\r\n      displayMode: 'image',\r\n      sort: { column: 'title', label: 'Product Name' },\r\n      sortOptions: [\r\n        { column: 'title', label: 'Product Name' },\r\n        { column: 'category', label: 'Category' },\r\n        { column: 'status', label: 'Status' }\r\n      ],\r\n      page: 1,\r\n      perPage: 4,\r\n      search: '',\r\n      from: 0,\r\n      to: 0,\r\n      total: 0,\r\n      lastPage: 0,\r\n      items: [],\r\n      pageSizes: [4, 8, 12],\r\n      selectedItems: [],\r\n      categories: [\r\n        { label: 'Cakes', value: 'Cakes' },\r\n        { label: 'Cupcakes', value: 'Cupcakes' },\r\n        { label: 'Desserts', value: 'Desserts' }\r\n      ],\r\n      statuses: [\r\n        { text: 'ON HOLD', value: 'ON HOLD' },\r\n        { text: 'PROCESSED', value: 'PROCESSED' }\r\n      ],\r\n      newItem: {\r\n        title: '',\r\n        category: '',\r\n        description: '',\r\n        status: ''\r\n      }\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    loadItems () {\r\n      this.isLoad = false\r\n      axios.get(this.apiUrl)\r\n        .then((response) => {\r\n          return response.data\r\n        })\r\n        .then((res) => {\r\n          this.total = res.total\r\n          this.from = res.from\r\n          this.to = res.to\r\n          this.items = res.data\r\n          this.perPage = res.per_page\r\n          this.selectedItems = []\r\n          this.lastPage = res.last_page\r\n          this.isLoad = true\r\n        })\r\n    },\r\n    hideModal (refname) {\r\n      this.$refs[refname].hide()\r\n    },\r\n    changeDisplayMode (displayType) {\r\n      this.displayMode = displayType\r\n    },\r\n    changePageSize (perPage) {\r\n      this.perPage = perPage\r\n    },\r\n    changeOrderBy (sort) {\r\n      this.sort = sort\r\n    },\r\n    addNewItem () {\r\n      console.log('adding item : ', this.newItem)\r\n    },\r\n    selectAll (isToggle) {\r\n      if (this.selectedItems.length >= this.items.length) {\r\n        if (isToggle) { this.selectedItems = [] }\r\n      } else {\r\n        this.selectedItems = this.items.map(x => x.id)\r\n      }\r\n    },\r\n    keymap (event) {\r\n      switch (event.srcKey) {\r\n        case 'select':\r\n          this.selectAll(false)\r\n          break\r\n        case 'undo':\r\n          this.selectedItems = []\r\n          break\r\n      }\r\n    },\r\n    getIndex (value, arr, prop) {\r\n      for (var i = 0; i < arr.length; i++) {\r\n        if (arr[i][prop] === value) {\r\n          return i\r\n        }\r\n      }\r\n      return -1\r\n    },\r\n    toggleItem (event, itemId) {\r\n      if (event.shiftKey && this.selectedItems.length > 0) {\r\n        let itemsForToggle = this.items\r\n        var start = this.getIndex(itemId, itemsForToggle, 'id')\r\n        var end = this.getIndex(this.selectedItems[this.selectedItems.length - 1], itemsForToggle, 'id')\r\n        itemsForToggle = itemsForToggle.slice(Math.min(start, end), Math.max(start, end) + 1)\r\n        this.selectedItems.push(\r\n          ...itemsForToggle.map(item => {\r\n            return item.id\r\n          })\r\n        )\r\n      } else {\r\n        if (this.selectedItems.includes(itemId)) {\r\n          this.selectedItems = this.selectedItems.filter(x => x !== itemId)\r\n        } else { this.selectedItems.push(itemId) }\r\n      }\r\n    },\r\n    handleContextmenu (vnode) {\r\n      if (!this.selectedItems.includes(vnode.key)) {\r\n        this.selectedItems = [vnode.key]\r\n      }\r\n    },\r\n    onContextCopy () {\r\n      console.log('context menu item clicked - Copy Items: ', this.selectedItems)\r\n    },\r\n    onContextArchive () {\r\n      console.log('context menu item clicked - Move to Archive Items: ', this.selectedItems)\r\n    },\r\n    onContextDelete () {\r\n      console.log('context menu item clicked - Delete Items: ', this.selectedItems)\r\n    },\r\n    linkGen (pageNum) {\r\n      return '#page-' + pageNum\r\n    }\r\n  },\r\n  computed: {\r\n    isSelectedAll () {\r\n      return this.selectedItems.length >= this.items.length\r\n    },\r\n    isAnyItemSelected () {\r\n      return this.selectedItems.length > 0 && this.selectedItems.length < this.items.length\r\n    },\r\n    apiUrl () {\r\n      return `${this.apiBase}?sort=${this.sort.column}&page=${this.page}&per_page=${this.perPage}&search=${this.search}`\r\n    }\r\n  },\r\n  watch: {\r\n    search () {\r\n      this.page = 1\r\n    },\r\n    apiUrl () {\r\n      this.loadItems()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.loadItems()\r\n  }\r\n}\r\n",{"version":3,"sources":["ImageList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"ImageList.vue","sourceRoot":"src/views/app/pages","sourcesContent":["<template>\r\n<b-colxx class=\"disable-text-selection\">\r\n  <b-row>\r\n    <b-colxx xxs=\"12\">\r\n      <h1>{{ $t('menu.image-list') }}</h1>\r\n      <div class=\"float-sm-right\">\r\n        <b-button v-b-modal.modalright variant=\"primary\" size=\"lg\" class=\"top-right-button\">{{ $t('pages.add-new') }}</b-button>\r\n        <b-button-group>\r\n        <b-dropdown  split right @click=\"selectAll(true)\" class=\"check-button\" variant=\"primary\">\r\n            <label class=\"custom-control custom-checkbox pl-4 mb-0 d-inline-block\" slot=\"button-content\">\r\n              <input class=\"custom-control-input\" type=\"checkbox\"\r\n              :checked=\"isSelectedAll\"\r\n              v-shortkey=\"{select: ['ctrl','a'], undo: ['ctrl','d']}\" @shortkey=\"keymap\"\r\n              />\r\n              <span :class=\"{\r\n                'custom-control-label' :true,\r\n                'indeterminate' : isAnyItemSelected\r\n              }\"/>\r\n            </label>\r\n          <b-dropdown-item>{{$t('pages.delete')}}</b-dropdown-item>\r\n          <b-dropdown-item>{{$t('pages.another-action')}}</b-dropdown-item>\r\n        </b-dropdown>\r\n        </b-button-group>\r\n        <b-modal id=\"modalright\" ref=\"modalright\" :title=\"$t('pages.add-new-modal-title')\" class=\"modal-right\">\r\n             <b-form>\r\n              <b-form-group :label=\"$t('pages.product-name')\">\r\n                <b-form-input v-model=\"newItem.title\"  />\r\n              </b-form-group>\r\n              <b-form-group :label=\"$t('pages.category')\">\r\n                  <v-select  :options=\"categories\" v-model=\"newItem.category\"/>\r\n              </b-form-group>\r\n              <b-form-group  :label=\"$t('pages.description')\">\r\n                <b-textarea  v-model=\"newItem.description\"  :rows=\"2\" :max-rows=\"2\"/>\r\n              </b-form-group>\r\n              <b-form-group :label=\"$t('pages.status')\">\r\n                <b-form-radio-group stacked class=\"pt-2\" :options=\"statuses\" v-model=\"newItem.status\" />\r\n              </b-form-group>\r\n\r\n            </b-form>\r\n\r\n              <template slot=\"modal-footer\">\r\n                <b-button variant=\"outline-secondary\" @click=\"hideModal('modalright')\">{{ $t('pages.cancel') }}</b-button>\r\n                <b-button variant=\"primary\" @click=\"addNewItem()\" class=\"mr-1\">{{ $t('pages.submit') }}</b-button>\r\n              </template>\r\n          </b-modal>\r\n\r\n      </div>\r\n      <piaf-breadcrumb/>\r\n      <div class=\"mb-2 mt-2\">\r\n        <b-button variant=\"empty\" class=\"pt-0 pl-0 d-inline-block d-md-none\" v-b-toggle.displayOptions>\r\n          {{ $t('pages.display-options') }} <i class=\"simple-icon-arrow-down align-middle\" />\r\n        </b-button>\r\n        <b-collapse id=\"displayOptions\" class=\"d-md-block\">\r\n          <span class=\"mr-3 mb-2 d-inline-block float-md-left\">\r\n            <a :class=\"{'mr-2 view-icon':true,'active': displayMode==='list'}\" @click=\"changeDisplayMode('list')\"><data-list-icon/></a>\r\n            <a :class=\"{'mr-2 view-icon':true,'active': displayMode==='thumb'}\" @click=\"changeDisplayMode('thumb')\"><thumb-list-icon/></a>\r\n            <a :class=\"{'mr-2 view-icon':true,'active': displayMode==='image'}\" @click=\"changeDisplayMode('image')\"><image-list-icon/></a>\r\n          </span>\r\n          <div class=\"d-block d-md-inline-block mb-2\">\r\n            <b-dropdown id=\"ddown1\" :text=\"`${$t('pages.orderby')} ${sort.label}`\" variant=\"outline-dark\" class=\"mr-1 float-md-left btn-group \" size=\"xs\">\r\n                <b-dropdown-item v-for=\"(order,index) in sortOptions\" :key=\"index\" @click=\"changeOrderBy(order)\" >{{ order.label }}</b-dropdown-item>\r\n            </b-dropdown>\r\n\r\n            <div class=\"search-sm d-inline-block float-md-left mr-1 align-top\">\r\n              <b-input :placeholder=\"$t('menu.search')\" v-model=\"search\"/>\r\n            </div>\r\n          </div>\r\n          <div class=\"float-md-right\">\r\n            <span class=\"text-muted text-small mr-1 mb-2\">{{from}}-{{to}} of {{ total }}</span>\r\n            <b-dropdown id=\"ddown2\" right :text=\"`${perPage}`\" variant=\"outline-dark\" class=\"d-inline-block\" size=\"xs\">\r\n                <b-dropdown-item v-for=\"(size,index) in pageSizes\" :key=\"index\" @click=\"changePageSize(size)\" >{{ size }}</b-dropdown-item>\r\n            </b-dropdown>\r\n          </div>\r\n        </b-collapse>\r\n      </div>\r\n      <div class=\"separator mb-5\"/>\r\n    </b-colxx>\r\n  </b-row>\r\n  <template v-if=\"isLoad\">\r\n  <b-row v-if=\"displayMode==='image'\" key=\"image\">\r\n      <b-colxx  sm=\"6\" lg=\"4\" xl=\"3\" class=\"mb-5\" v-for=\"(item,index) in items\"   :key=\"index\"  :id=\"item.id\">\r\n        <image-list-item\r\n          :key=\"item.id\"\r\n          :data=\"item\"\r\n          :selected-items=\"selectedItems\"\r\n          @toggle-item=\"toggleItem\"\r\n          v-contextmenu:contextmenu\r\n        />\r\n      </b-colxx>\r\n    </b-row>\r\n    <b-row v-else-if=\"displayMode==='thumb'\" key=\"thumb\">\r\n      <b-colxx xxs=\"12\" class=\"mb-3\" v-for=\"(item,index) in items\"   :key=\"index\"  :id=\"item.id\">\r\n        <thumb-list-item\r\n          :key=\"item.id\"\r\n          :data=\"item\"\r\n          :selected-items=\"selectedItems\"\r\n          @toggle-item=\"toggleItem\"\r\n          v-contextmenu:contextmenu\r\n        />\r\n      </b-colxx>\r\n    </b-row>\r\n      <b-row v-else-if=\"displayMode==='list'\" key=\"list\">\r\n      <b-colxx xxs=\"12\" class=\"mb-3\" v-for=\"(item,index) in items\"   :key=\"index\"  :id=\"item.id\">\r\n        <data-list-item\r\n          :key=\"item.id\"\r\n          :data=\"item\"\r\n          :selected-items=\"selectedItems\"\r\n          @toggle-item=\"toggleItem\"\r\n          v-contextmenu:contextmenu\r\n        />\r\n      </b-colxx>\r\n    </b-row>\r\n    <b-row v-if=\"lastPage>1\">\r\n      <b-colxx xxs=\"12\">\r\n        <b-pagination-nav\r\n            :number-of-pages=\"lastPage\"\r\n            :link-gen=\"linkGen\"\r\n            v-model=\"page\"\r\n            :per-page=\"perPage\"\r\n            align=\"center\"\r\n          >\r\n            <template v-slot:next-text>\r\n              <i class=\"simple-icon-arrow-right\"/>\r\n            </template>\r\n            <template v-slot:prev-text>\r\n              <i class=\"simple-icon-arrow-left\"/>\r\n            </template>\r\n            <template v-slot:first-text>\r\n              <i class=\"simple-icon-control-start\"/>\r\n            </template>\r\n            <template v-slot:last-text>\r\n              <i class=\"simple-icon-control-end\"/>\r\n            </template>\r\n          </b-pagination-nav>\r\n\r\n      </b-colxx>\r\n    </b-row>\r\n\r\n    </template>\r\n    <template v-else>\r\n      <div class=\"loading\"></div>\r\n    </template>\r\n\r\n    <v-contextmenu ref=\"contextmenu\" @contextmenu=\"handleContextmenu\">\r\n      <v-contextmenu-item @click=\"onContextCopy()\"><i class=\"simple-icon-docs\" /> <span>Copy</span></v-contextmenu-item>\r\n      <v-contextmenu-item @click=\"onContextArchive()\"><i class=\"simple-icon-drawer\" /> <span>Move to archive</span></v-contextmenu-item>\r\n      <v-contextmenu-item @click=\"onContextDelete()\"><i class=\"simple-icon-trash\" /> <span>Delete</span></v-contextmenu-item>\r\n    </v-contextmenu>\r\n\r\n    </b-colxx>\r\n  </template>\r\n<script>\r\nimport { DataListIcon, ThumbListIcon, ImageListIcon } from '@/components/Svg'\r\nimport vSelect from 'vue-select'\r\nimport 'vue-select/dist/vue-select.css'\r\nimport axios from 'axios'\r\n\r\nimport ImageListItem from '@/components/Listing/ImageListItem'\r\nimport ThumbListItem from '@/components/Listing/ThumbListItem'\r\nimport DataListItem from '@/components/Listing/DataListItem'\r\nimport { apiUrl } from '@/constants/config'\r\n\r\nexport default {\r\n  components: {\r\n    DataListIcon,\r\n    ThumbListIcon,\r\n    ImageListIcon,\r\n    vSelect,\r\n    ImageListItem,\r\n    ThumbListItem,\r\n    DataListItem\r\n  },\r\n  data () {\r\n    return {\r\n      isLoad: false,\r\n      apiBase: apiUrl + '/cakes/fordatatable',\r\n      displayMode: 'image',\r\n      sort: { column: 'title', label: 'Product Name' },\r\n      sortOptions: [\r\n        { column: 'title', label: 'Product Name' },\r\n        { column: 'category', label: 'Category' },\r\n        { column: 'status', label: 'Status' }\r\n      ],\r\n      page: 1,\r\n      perPage: 4,\r\n      search: '',\r\n      from: 0,\r\n      to: 0,\r\n      total: 0,\r\n      lastPage: 0,\r\n      items: [],\r\n      pageSizes: [4, 8, 12],\r\n      selectedItems: [],\r\n      categories: [\r\n        { label: 'Cakes', value: 'Cakes' },\r\n        { label: 'Cupcakes', value: 'Cupcakes' },\r\n        { label: 'Desserts', value: 'Desserts' }\r\n      ],\r\n      statuses: [\r\n        { text: 'ON HOLD', value: 'ON HOLD' },\r\n        { text: 'PROCESSED', value: 'PROCESSED' }\r\n      ],\r\n      newItem: {\r\n        title: '',\r\n        category: '',\r\n        description: '',\r\n        status: ''\r\n      }\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    loadItems () {\r\n      this.isLoad = false\r\n      axios.get(this.apiUrl)\r\n        .then((response) => {\r\n          return response.data\r\n        })\r\n        .then((res) => {\r\n          this.total = res.total\r\n          this.from = res.from\r\n          this.to = res.to\r\n          this.items = res.data\r\n          this.perPage = res.per_page\r\n          this.selectedItems = []\r\n          this.lastPage = res.last_page\r\n          this.isLoad = true\r\n        })\r\n    },\r\n    hideModal (refname) {\r\n      this.$refs[refname].hide()\r\n    },\r\n    changeDisplayMode (displayType) {\r\n      this.displayMode = displayType\r\n    },\r\n    changePageSize (perPage) {\r\n      this.perPage = perPage\r\n    },\r\n    changeOrderBy (sort) {\r\n      this.sort = sort\r\n    },\r\n    addNewItem () {\r\n      console.log('adding item : ', this.newItem)\r\n    },\r\n    selectAll (isToggle) {\r\n      if (this.selectedItems.length >= this.items.length) {\r\n        if (isToggle) { this.selectedItems = [] }\r\n      } else {\r\n        this.selectedItems = this.items.map(x => x.id)\r\n      }\r\n    },\r\n    keymap (event) {\r\n      switch (event.srcKey) {\r\n        case 'select':\r\n          this.selectAll(false)\r\n          break\r\n        case 'undo':\r\n          this.selectedItems = []\r\n          break\r\n      }\r\n    },\r\n    getIndex (value, arr, prop) {\r\n      for (var i = 0; i < arr.length; i++) {\r\n        if (arr[i][prop] === value) {\r\n          return i\r\n        }\r\n      }\r\n      return -1\r\n    },\r\n    toggleItem (event, itemId) {\r\n      if (event.shiftKey && this.selectedItems.length > 0) {\r\n        let itemsForToggle = this.items\r\n        var start = this.getIndex(itemId, itemsForToggle, 'id')\r\n        var end = this.getIndex(this.selectedItems[this.selectedItems.length - 1], itemsForToggle, 'id')\r\n        itemsForToggle = itemsForToggle.slice(Math.min(start, end), Math.max(start, end) + 1)\r\n        this.selectedItems.push(\r\n          ...itemsForToggle.map(item => {\r\n            return item.id\r\n          })\r\n        )\r\n      } else {\r\n        if (this.selectedItems.includes(itemId)) {\r\n          this.selectedItems = this.selectedItems.filter(x => x !== itemId)\r\n        } else { this.selectedItems.push(itemId) }\r\n      }\r\n    },\r\n    handleContextmenu (vnode) {\r\n      if (!this.selectedItems.includes(vnode.key)) {\r\n        this.selectedItems = [vnode.key]\r\n      }\r\n    },\r\n    onContextCopy () {\r\n      console.log('context menu item clicked - Copy Items: ', this.selectedItems)\r\n    },\r\n    onContextArchive () {\r\n      console.log('context menu item clicked - Move to Archive Items: ', this.selectedItems)\r\n    },\r\n    onContextDelete () {\r\n      console.log('context menu item clicked - Delete Items: ', this.selectedItems)\r\n    },\r\n    linkGen (pageNum) {\r\n      return '#page-' + pageNum\r\n    }\r\n  },\r\n  computed: {\r\n    isSelectedAll () {\r\n      return this.selectedItems.length >= this.items.length\r\n    },\r\n    isAnyItemSelected () {\r\n      return this.selectedItems.length > 0 && this.selectedItems.length < this.items.length\r\n    },\r\n    apiUrl () {\r\n      return `${this.apiBase}?sort=${this.sort.column}&page=${this.page}&per_page=${this.perPage}&search=${this.search}`\r\n    }\r\n  },\r\n  watch: {\r\n    search () {\r\n      this.page = 1\r\n    },\r\n    apiUrl () {\r\n      this.loadItems()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.loadItems()\r\n  }\r\n}\r\n</script>\r\n"]}]}