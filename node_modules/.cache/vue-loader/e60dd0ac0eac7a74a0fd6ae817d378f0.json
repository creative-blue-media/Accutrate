{"remainingRequest":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlaheywood/Documents/GitHub/Accutrate/src/components/Common/Breadcrumb.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/src/components/Common/Breadcrumb.vue","mtime":1554628934000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  props: ['heading'],\r\n  data () {\r\n    return {\r\n      items: []\r\n    }\r\n  },\r\n  methods: {\r\n    getUrl (path, sub, index) {\r\n      var pathToGo = '/' + path.split(sub)[0] + sub\r\n      if (pathToGo === '/app') {\r\n        pathToGo = '/'\r\n      }\r\n      return pathToGo\r\n    }\r\n  },\r\n  mounted () {\r\n    let path = this.$route.path.substr(1)\r\n    let rawPaths = path.split('/')\r\n\r\n    for (var pName in this.$route.params) {\r\n      if (rawPaths.includes(this.$route.params[pName])) {\r\n        rawPaths = rawPaths.filter(x => x !== this.$route.params[pName])\r\n      }\r\n    }\r\n    rawPaths.map((sub, index) => {\r\n      this.items.push({\r\n        text: this.$t('menu.' + sub),\r\n        to: this.getUrl(path, sub, index)\r\n      })\r\n    })\r\n  }\r\n}\r\n",{"version":3,"sources":["Breadcrumb.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Breadcrumb.vue","sourceRoot":"src/components/Common","sourcesContent":["<template>\r\n    <span>\r\n      <h1 v-if=\"heading && heading.length>0\">{{ heading }}</h1>\r\n      <b-nav class=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n          <b-breadcrumb :items=\"items\"/>\r\n      </b-nav>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['heading'],\r\n  data () {\r\n    return {\r\n      items: []\r\n    }\r\n  },\r\n  methods: {\r\n    getUrl (path, sub, index) {\r\n      var pathToGo = '/' + path.split(sub)[0] + sub\r\n      if (pathToGo === '/app') {\r\n        pathToGo = '/'\r\n      }\r\n      return pathToGo\r\n    }\r\n  },\r\n  mounted () {\r\n    let path = this.$route.path.substr(1)\r\n    let rawPaths = path.split('/')\r\n\r\n    for (var pName in this.$route.params) {\r\n      if (rawPaths.includes(this.$route.params[pName])) {\r\n        rawPaths = rawPaths.filter(x => x !== this.$route.params[pName])\r\n      }\r\n    }\r\n    rawPaths.map((sub, index) => {\r\n      this.items.push({\r\n        text: this.$t('menu.' + sub),\r\n        to: this.getUrl(path, sub, index)\r\n      })\r\n    })\r\n  }\r\n}\r\n</script>\r\n"]}]}