{"remainingRequest":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/babel-loader/lib/index.js!/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/eslint-loader/index.js??ref--13-0!/Users/carlaheywood/Documents/GitHub/Accutrate/src/store/modules/survey.js","dependencies":[{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/src/store/modules/survey.js","mtime":1554628934000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport axios from 'axios';\nimport { apiUrl } from '@/constants/config';\nvar state = {\n  isLoadSurveys: false,\n  allSurveyItems: null,\n  surveyItems: null,\n  surveyError: ''\n};\nvar getters = {\n  isLoadSurveys: function isLoadSurveys(state) {\n    return state.isLoadSurveys;\n  },\n  allSurveyItems: function allSurveyItems(state) {\n    return state.allSurveyItems;\n  },\n  surveyError: function surveyError(state) {\n    return state.surveyError;\n  },\n  surveyItems: function surveyItems(state) {\n    return state.surveyItems;\n  }\n};\nvar mutations = {\n  getSurveyItemSuccess: function getSurveyItemSuccess(state, items) {\n    state.isLoadSurveys = true;\n    state.allSurveyItems = items;\n    state.surveyItems = items;\n  },\n  getSurveyItemError: function getSurveyItemError(state, error) {\n    state.isLoadSurveys = false;\n    state.surveyError = error;\n    state.allSurveyItems = null;\n    state.surveyItems = null;\n  },\n  addSurveyItem: function addSurveyItem(state, newItem) {\n    var newId = Math.max.apply(Math, _toConsumableArray(state.allSurveyItems.map(function (item) {\n      return item.id;\n    }))) + 1;\n    state.allSurveyItems.splice(0, 0, _objectSpread({\n      id: newId\n    }, newItem));\n    state.surveyItems = state.allSurveyItems;\n  }\n};\nvar actions = {\n  getSurveyItems: function getSurveyItems(_ref) {\n    var commit = _ref.commit;\n    axios.get(\"\".concat(apiUrl, \"/surveys\")).then(function (r) {\n      return r.data;\n    }).then(function (res) {\n      if (res.status) {\n        commit('getSurveyItemSuccess', res.data);\n      } else {\n        commit('getSurveyItemError', 'error:getSurveyItem');\n      }\n    });\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/Users/carlaheywood/Documents/GitHub/Accutrate/src/store/modules/survey.js"],"names":["axios","apiUrl","state","isLoadSurveys","allSurveyItems","surveyItems","surveyError","getters","mutations","getSurveyItemSuccess","items","getSurveyItemError","error","addSurveyItem","newItem","newId","Math","max","map","item","id","splice","actions","getSurveyItems","commit","get","then","r","data","res","status"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,aAAa,EAAE,KADH;AAEZC,EAAAA,cAAc,EAAE,IAFJ;AAGZC,EAAAA,WAAW,EAAE,IAHD;AAIZC,EAAAA,WAAW,EAAE;AAJD,CAAd;AAOA,IAAMC,OAAO,GAAG;AACdJ,EAAAA,aAAa,EAAE,uBAAAD,KAAK;AAAA,WAAIA,KAAK,CAACC,aAAV;AAAA,GADN;AAEdC,EAAAA,cAAc,EAAE,wBAAAF,KAAK;AAAA,WAAIA,KAAK,CAACE,cAAV;AAAA,GAFP;AAGdE,EAAAA,WAAW,EAAE,qBAAAJ,KAAK;AAAA,WAAIA,KAAK,CAACI,WAAV;AAAA,GAHJ;AAIdD,EAAAA,WAAW,EAAE,qBAAAH,KAAK;AAAA,WAAIA,KAAK,CAACG,WAAV;AAAA;AAJJ,CAAhB;AAOA,IAAMG,SAAS,GAAG;AAChBC,EAAAA,oBADgB,gCACMP,KADN,EACaQ,KADb,EACoB;AAClCR,IAAAA,KAAK,CAACC,aAAN,GAAsB,IAAtB;AACAD,IAAAA,KAAK,CAACE,cAAN,GAAuBM,KAAvB;AACAR,IAAAA,KAAK,CAACG,WAAN,GAAoBK,KAApB;AACD,GALe;AAMhBC,EAAAA,kBANgB,8BAMIT,KANJ,EAMWU,KANX,EAMkB;AAChCV,IAAAA,KAAK,CAACC,aAAN,GAAsB,KAAtB;AACAD,IAAAA,KAAK,CAACI,WAAN,GAAoBM,KAApB;AACAV,IAAAA,KAAK,CAACE,cAAN,GAAuB,IAAvB;AACAF,IAAAA,KAAK,CAACG,WAAN,GAAoB,IAApB;AACD,GAXe;AAYhBQ,EAAAA,aAZgB,yBAYDX,KAZC,EAYMY,OAZN,EAYe;AAC7B,QAAMC,KAAK,GAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,qBAAQd,KAAK,CAACE,cAAN,CAAqBc,GAArB,CAAyB,UAAAC,IAAI;AAAA,aAAIA,IAAI,CAACC,EAAT;AAAA,KAA7B,CAAR,EAAJ,GAAyD,CAAvE;AACAlB,IAAAA,KAAK,CAACE,cAAN,CAAqBiB,MAArB,CAA4B,CAA5B,EAA+B,CAA/B;AAAoCD,MAAAA,EAAE,EAAEL;AAAxC,OAAkDD,OAAlD;AACAZ,IAAAA,KAAK,CAACG,WAAN,GAAoBH,KAAK,CAACE,cAA1B;AACD;AAhBe,CAAlB;AAoBA,IAAMkB,OAAO,GAAG;AACdC,EAAAA,cADc,gCACc;AAAA,QAAVC,MAAU,QAAVA,MAAU;AAC1BxB,IAAAA,KAAK,CACFyB,GADH,WACUxB,MADV,eAEGyB,IAFH,CAEQ,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACC,IAAN;AAAA,KAFT,EAGGF,IAHH,CAGQ,UAAAG,GAAG,EAAI;AACX,UAAIA,GAAG,CAACC,MAAR,EAAgB;AACdN,QAAAA,MAAM,CAAC,sBAAD,EAAyBK,GAAG,CAACD,IAA7B,CAAN;AACD,OAFD,MAEO;AACLJ,QAAAA,MAAM,CAAC,oBAAD,EAAuB,qBAAvB,CAAN;AACD;AACF,KATH;AAUD;AAZa,CAAhB;AAeA,eAAe;AACbtB,EAAAA,KAAK,EAALA,KADa;AAEbK,EAAAA,OAAO,EAAPA,OAFa;AAGbC,EAAAA,SAAS,EAATA,SAHa;AAIbc,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import axios from 'axios'\r\nimport { apiUrl } from '@/constants/config'\r\n\r\nconst state = {\r\n  isLoadSurveys: false,\r\n  allSurveyItems: null,\r\n  surveyItems: null,\r\n  surveyError: ''\r\n}\r\n\r\nconst getters = {\r\n  isLoadSurveys: state => state.isLoadSurveys,\r\n  allSurveyItems: state => state.allSurveyItems,\r\n  surveyError: state => state.surveyError,\r\n  surveyItems: state => state.surveyItems\r\n}\r\n\r\nconst mutations = {\r\n  getSurveyItemSuccess (state, items) {\r\n    state.isLoadSurveys = true\r\n    state.allSurveyItems = items\r\n    state.surveyItems = items\r\n  },\r\n  getSurveyItemError (state, error) {\r\n    state.isLoadSurveys = false\r\n    state.surveyError = error\r\n    state.allSurveyItems = null\r\n    state.surveyItems = null\r\n  },\r\n  addSurveyItem (state, newItem) {\r\n    const newId = Math.max(...state.allSurveyItems.map(item => item.id)) + 1\r\n    state.allSurveyItems.splice(0, 0, { id: newId, ...newItem })\r\n    state.surveyItems = state.allSurveyItems\r\n  }\r\n\r\n}\r\n\r\nconst actions = {\r\n  getSurveyItems ({ commit }) {\r\n    axios\r\n      .get(`${apiUrl}/surveys`)\r\n      .then(r => r.data)\r\n      .then(res => {\r\n        if (res.status) {\r\n          commit('getSurveyItemSuccess', res.data)\r\n        } else {\r\n          commit('getSurveyItemError', 'error:getSurveyItem')\r\n        }\r\n      })\r\n  }\r\n}\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  mutations,\r\n  actions\r\n}\r\n"]}]}