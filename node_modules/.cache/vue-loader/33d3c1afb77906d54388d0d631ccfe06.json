{"remainingRequest":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/src/components/Charts/SmallLine.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/src/components/Charts/SmallLine.vue","mtime":1554628934000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\r\nimport Chart from 'chart.js'\r\nimport { generateChart } from 'vue-chartjs'\r\n\r\nimport { smallLineChartOptions } from './config'\r\nimport { addCommas } from '@/utils'\r\n\r\nChart.defaults.lineWithLine = Chart.defaults.line\r\nChart.controllers.lineWithLine = Chart.controllers.line.extend({\r\n  draw: function (ease) {\r\n    Chart.controllers.line.prototype.draw.call(this, ease)\r\n\r\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\r\n      var activePoint = this.chart.tooltip._active[0]\r\n      var ctx = this.chart.ctx\r\n      var x = activePoint.tooltipPosition().x\r\n      var topY = this.chart.scales['y-axis-0'].top\r\n      var bottomY = this.chart.scales['y-axis-0'].bottom\r\n\r\n      ctx.save()\r\n      ctx.beginPath()\r\n      ctx.moveTo(x, topY)\r\n      ctx.lineTo(x, bottomY)\r\n      ctx.lineWidth = 1\r\n      ctx.strokeStyle = 'rgba(0,0,0,0.1)'\r\n      ctx.stroke()\r\n      ctx.restore()\r\n    }\r\n  }\r\n})\r\n\r\nconst SmallLine = generateChart('small-line', 'lineWithLine')\r\nexport default {\r\n  extends: SmallLine,\r\n  props: ['data'],\r\n  data () {\r\n    return {\r\n      options: smallLineChartOptions\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    const $that = this\r\n\r\n    const tooltips = {\r\n      intersect: false,\r\n      enabled: false,\r\n      custom: function (tooltipModel, data) {\r\n        if (tooltipModel && tooltipModel.dataPoints) {\r\n          var yLabel = tooltipModel.dataPoints[0].yLabel\r\n          var xLabel = tooltipModel.dataPoints[0].xLabel\r\n          var label = tooltipModel.body[0].lines[0].split(':')[0]\r\n          $that.$emit('on-chart-mouse-over', { labelx: label + '-' + xLabel, labely: addCommas(yLabel) })\r\n        }\r\n      }\r\n    }\r\n\r\n    this.addPlugin({\r\n      afterInit: function (chart, options) {\r\n        var yLabel = chart.data.datasets[0].data[0]\r\n        var xLabel = chart.data.labels[0]\r\n        var label = chart.data.datasets[0].label\r\n        $that.$emit('on-chart-mouse-over', { labelx: label + '-' + xLabel, labely: addCommas(yLabel) })\r\n      }\r\n    })\r\n    this.renderChart(this.data, Object.assign({ ...this.options }, { tooltips: tooltips }))\r\n  }\r\n}\r\n",{"version":3,"sources":["SmallLine.vue"],"names":[],"mappings":";AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SmallLine.vue","sourceRoot":"src/components/Charts","sourcesContent":["<script>\r\nimport Chart from 'chart.js'\r\nimport { generateChart } from 'vue-chartjs'\r\n\r\nimport { smallLineChartOptions } from './config'\r\nimport { addCommas } from '@/utils'\r\n\r\nChart.defaults.lineWithLine = Chart.defaults.line\r\nChart.controllers.lineWithLine = Chart.controllers.line.extend({\r\n  draw: function (ease) {\r\n    Chart.controllers.line.prototype.draw.call(this, ease)\r\n\r\n    if (this.chart.tooltip._active && this.chart.tooltip._active.length) {\r\n      var activePoint = this.chart.tooltip._active[0]\r\n      var ctx = this.chart.ctx\r\n      var x = activePoint.tooltipPosition().x\r\n      var topY = this.chart.scales['y-axis-0'].top\r\n      var bottomY = this.chart.scales['y-axis-0'].bottom\r\n\r\n      ctx.save()\r\n      ctx.beginPath()\r\n      ctx.moveTo(x, topY)\r\n      ctx.lineTo(x, bottomY)\r\n      ctx.lineWidth = 1\r\n      ctx.strokeStyle = 'rgba(0,0,0,0.1)'\r\n      ctx.stroke()\r\n      ctx.restore()\r\n    }\r\n  }\r\n})\r\n\r\nconst SmallLine = generateChart('small-line', 'lineWithLine')\r\nexport default {\r\n  extends: SmallLine,\r\n  props: ['data'],\r\n  data () {\r\n    return {\r\n      options: smallLineChartOptions\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    const $that = this\r\n\r\n    const tooltips = {\r\n      intersect: false,\r\n      enabled: false,\r\n      custom: function (tooltipModel, data) {\r\n        if (tooltipModel && tooltipModel.dataPoints) {\r\n          var yLabel = tooltipModel.dataPoints[0].yLabel\r\n          var xLabel = tooltipModel.dataPoints[0].xLabel\r\n          var label = tooltipModel.body[0].lines[0].split(':')[0]\r\n          $that.$emit('on-chart-mouse-over', { labelx: label + '-' + xLabel, labely: addCommas(yLabel) })\r\n        }\r\n      }\r\n    }\r\n\r\n    this.addPlugin({\r\n      afterInit: function (chart, options) {\r\n        var yLabel = chart.data.datasets[0].data[0]\r\n        var xLabel = chart.data.labels[0]\r\n        var label = chart.data.datasets[0].label\r\n        $that.$emit('on-chart-mouse-over', { labelx: label + '-' + xLabel, labely: addCommas(yLabel) })\r\n      }\r\n    })\r\n    this.renderChart(this.data, Object.assign({ ...this.options }, { tooltips: tooltips }))\r\n  }\r\n}\r\n</script>\r\n"]}]}