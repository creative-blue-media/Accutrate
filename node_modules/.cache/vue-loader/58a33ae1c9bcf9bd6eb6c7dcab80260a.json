{"remainingRequest":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/src/views/app/ui/Forms.vue?vue&type=template&id=997d6dc8&","dependencies":[{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/src/views/app/ui/Forms.vue","mtime":1558383252000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/Vue.jsApp/Accutrate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-colxx\",\n            { attrs: { xxs: \"12\" } },\n            [\n              _c(\"piaf-breadcrumb\", {\n                attrs: { heading: _vm.$t(\"menu.forms\") }\n              }),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"separator mb-5\" })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-colxx\",\n            { attrs: { xxs: \"12\" } },\n            [\n              _c(\n                \"b-card\",\n                {\n                  staticClass: \"mb-4\",\n                  attrs: { title: _vm.$t(\"forms.basic\") }\n                },\n                [\n                  _c(\n                    \"b-form\",\n                    {\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.onBasicSubmit($event)\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            label: _vm.$t(\"forms.email\"),\n                            description: _vm.$t(\"forms.email-muted\")\n                          }\n                        },\n                        [\n                          _c(\"b-form-input\", {\n                            attrs: {\n                              type: \"email\",\n                              placeholder: _vm.$t(\"forms.email\")\n                            },\n                            model: {\n                              value: _vm.basicForm.email,\n                              callback: function($$v) {\n                                _vm.$set(_vm.basicForm, \"email\", $$v)\n                              },\n                              expression: \"basicForm.email\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-form-group\",\n                        { attrs: { label: _vm.$t(\"forms.password\") } },\n                        [\n                          _c(\"b-form-input\", {\n                            attrs: {\n                              type: \"password\",\n                              placeholder: _vm.$t(\"forms.password\")\n                            },\n                            model: {\n                              value: _vm.basicForm.password,\n                              callback: function($$v) {\n                                _vm.$set(_vm.basicForm, \"password\", $$v)\n                              },\n                              expression: \"basicForm.password\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-form-group\",\n                        [\n                          _c(\n                            \"b-form-checkbox\",\n                            {\n                              model: {\n                                value: _vm.basicForm.checked,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.basicForm, \"checked\", $$v)\n                                },\n                                expression: \"basicForm.checked\"\n                              }\n                            },\n                            [_vm._v(_vm._s(_vm.$t(\"forms.custom-checkbox\")))]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"mt-4\",\n                          attrs: { type: \"submit\", variant: \"primary\" }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"forms.submit\")))]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-colxx\",\n            { attrs: { xxs: \"12\" } },\n            [\n              _c(\n                \"b-card\",\n                {\n                  staticClass: \"mb-4\",\n                  attrs: { title: _vm.$t(\"forms.horizontal\") }\n                },\n                [\n                  _c(\n                    \"b-form\",\n                    {\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.onHorizontalSubmit($event)\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            \"label-cols\": \"2\",\n                            horizontal: \"\",\n                            label: _vm.$t(\"forms.email\")\n                          }\n                        },\n                        [\n                          _c(\"b-form-input\", {\n                            attrs: { placeholder: _vm.$t(\"forms.email\") },\n                            model: {\n                              value: _vm.horizontalForm.email,\n                              callback: function($$v) {\n                                _vm.$set(_vm.horizontalForm, \"email\", $$v)\n                              },\n                              expression: \"horizontalForm.email\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            \"label-cols\": \"2\",\n                            horizontal: \"\",\n                            label: _vm.$t(\"forms.password\")\n                          }\n                        },\n                        [\n                          _c(\"b-form-input\", {\n                            attrs: {\n                              type: \"password\",\n                              placeholder: _vm.$t(\"forms.password\")\n                            },\n                            model: {\n                              value: _vm.horizontalForm.password,\n                              callback: function($$v) {\n                                _vm.$set(_vm.horizontalForm, \"password\", $$v)\n                              },\n                              expression: \"horizontalForm.password\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            \"label-cols\": \"2\",\n                            horizontal: \"\",\n                            label: _vm.$t(\"forms.radios\")\n                          }\n                        },\n                        [\n                          _c(\"b-form-radio-group\", {\n                            staticClass: \"pt-2\",\n                            attrs: {\n                              stacked: \"\",\n                              options: _vm.horizontalFormRadios\n                            },\n                            model: {\n                              value: _vm.horizontalForm.radio,\n                              callback: function($$v) {\n                                _vm.$set(_vm.horizontalForm, \"radio\", $$v)\n                              },\n                              expression: \"horizontalForm.radio\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-form-group\",\n                        {\n                          attrs: {\n                            \"label-cols\": \"2\",\n                            horizontal: \"\",\n                            label: _vm.$t(\"forms.checkbox\")\n                          }\n                        },\n                        [\n                          _c(\n                            \"b-form-checkbox\",\n                            {\n                              model: {\n                                value: _vm.horizontalForm.checked,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.horizontalForm, \"checked\", $$v)\n                                },\n                                expression: \"horizontalForm.checked\"\n                              }\n                            },\n                            [_vm._v(_vm._s(_vm.$t(\"forms.custom-checkbox\")))]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"mt-4\",\n                          attrs: { type: \"submit\", variant: \"primary\" }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"forms.signin\")))]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-colxx\",\n            { attrs: { xxs: \"12\" } },\n            [\n              _c(\n                \"b-card\",\n                {\n                  staticClass: \"mb-4\",\n                  attrs: { title: _vm.$t(\"forms.top-labels-over-line\") }\n                },\n                [\n                  _c(\n                    \"b-form\",\n                    {\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.onTopLabelsOverLineFormSubmit($event)\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"label\",\n                        { staticClass: \"form-group has-float-label\" },\n                        [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.topLabelsOverLineForm.email,\n                                expression: \"topLabelsOverLineForm.email\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { type: \"email\" },\n                            domProps: {\n                              value: _vm.topLabelsOverLineForm.email\n                            },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.topLabelsOverLineForm,\n                                  \"email\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"forms.email\")))])\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"label\",\n                        { staticClass: \"form-group has-float-label\" },\n                        [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.topLabelsOverLineForm.password,\n                                expression: \"topLabelsOverLineForm.password\"\n                              }\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { type: \"password\" },\n                            domProps: {\n                              value: _vm.topLabelsOverLineForm.password\n                            },\n                            on: {\n                              input: function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(\n                                  _vm.topLabelsOverLineForm,\n                                  \"password\",\n                                  $event.target.value\n                                )\n                              }\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"forms.password\")))])\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group has-float-label\" },\n                        [\n                          _c(\"input-tag\", {\n                            model: {\n                              value: _vm.topLabelsOverLineForm.tags,\n                              callback: function($$v) {\n                                _vm.$set(_vm.topLabelsOverLineForm, \"tags\", $$v)\n                              },\n                              expression: \"topLabelsOverLineForm.tags\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"forms.tags\")))])\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group has-float-label\" },\n                        [\n                          _c(\"v-date-picker\", {\n                            attrs: {\n                              mode: \"single\",\n                              \"input-props\": {\n                                class: \"form-control\",\n                                placeholder: _vm.$t(\"form-components.date\")\n                              }\n                            },\n                            model: {\n                              value: _vm.topLabelsOverLineForm.date,\n                              callback: function($$v) {\n                                _vm.$set(_vm.topLabelsOverLineForm, \"date\", $$v)\n                              },\n                              expression: \"topLabelsOverLineForm.date\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"forms.date\")))])\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group has-float-label\" },\n                        [\n                          _c(\"v-select\", {\n                            attrs: { options: _vm.selectData },\n                            model: {\n                              value: _vm.topLabelsOverLineForm.select,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.topLabelsOverLineForm,\n                                  \"select\",\n                                  $$v\n                                )\n                              },\n                              expression: \"topLabelsOverLineForm.select\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"forms.state\")))])\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"mt-4\",\n                          attrs: { type: \"submit\", variant: \"primary\" }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"forms.submit\")))]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-colxx\",\n            { attrs: { xxs: \"12\" } },\n            [\n              _c(\n                \"b-card\",\n                {\n                  staticClass: \"mb-4\",\n                  attrs: { title: _vm.$t(\"forms.top-labels-in-input\") }\n                },\n                [\n                  _c(\n                    \"b-form\",\n                    {\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.onTopLabelsInInputFormSubmit($event)\n                        }\n                      }\n                    },\n                    [\n                      _c(\"label\", { staticClass: \"form-group has-top-label\" }, [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.topLabelsInInputForm.email,\n                              expression: \"topLabelsInInputForm.email\"\n                            }\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: { type: \"email\" },\n                          domProps: { value: _vm.topLabelsInInputForm.email },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.topLabelsInInputForm,\n                                \"email\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"forms.email-u\")))])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"label\", { staticClass: \"form-group has-top-label\" }, [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.topLabelsInInputForm.password,\n                              expression: \"topLabelsInInputForm.password\"\n                            }\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: { type: \"password\" },\n                          domProps: {\n                            value: _vm.topLabelsInInputForm.password\n                          },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.topLabelsInInputForm,\n                                \"password\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"forms.password-u\")))])\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group has-top-label\" },\n                        [\n                          _c(\"input-tag\", {\n                            model: {\n                              value: _vm.topLabelsInInputForm.tags,\n                              callback: function($$v) {\n                                _vm.$set(_vm.topLabelsInInputForm, \"tags\", $$v)\n                              },\n                              expression: \"topLabelsInInputForm.tags\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"forms.tags-u\")))])\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group has-top-label\" },\n                        [\n                          _c(\"v-date-picker\", {\n                            attrs: {\n                              mode: \"single\",\n                              \"input-props\": {\n                                class: \"form-control\",\n                                placeholder: _vm.$t(\"form-components.date\")\n                              }\n                            },\n                            model: {\n                              value: _vm.topLabelsInInputForm.date,\n                              callback: function($$v) {\n                                _vm.$set(_vm.topLabelsInInputForm, \"date\", $$v)\n                              },\n                              expression: \"topLabelsInInputForm.date\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"forms.date-u\")))])\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group has-top-label\" },\n                        [\n                          _c(\"v-select\", {\n                            attrs: { options: _vm.selectData },\n                            model: {\n                              value: _vm.topLabelsInInputForm.select,\n                              callback: function($$v) {\n                                _vm.$set(\n                                  _vm.topLabelsInInputForm,\n                                  \"select\",\n                                  $$v\n                                )\n                              },\n                              expression: \"topLabelsInInputForm.select\"\n                            }\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"span\", [_vm._v(_vm._s(_vm.$t(\"forms.state-u\")))])\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"mt-4\",\n                          attrs: { type: \"submit\", variant: \"primary\" }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"forms.submit\")))]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-colxx\",\n            { attrs: { xxs: \"12\" } },\n            [\n              _c(\n                \"b-card\",\n                { staticClass: \"mb-4\", attrs: { title: _vm.$t(\"forms.grid\") } },\n                [\n                  _c(\n                    \"b-form\",\n                    {\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.onGridFormSubmit($event)\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"b-row\",\n                        [\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"6\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.email\") } },\n                                [\n                                  _c(\"b-form-input\", {\n                                    attrs: { type: \"email\" },\n                                    model: {\n                                      value: _vm.gridForm.email,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.gridForm, \"email\", $$v)\n                                      },\n                                      expression: \"gridForm.email\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"6\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.password\") } },\n                                [\n                                  _c(\"b-form-input\", {\n                                    attrs: { type: \"password\" },\n                                    model: {\n                                      value: _vm.gridForm.password,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.gridForm, \"password\", $$v)\n                                      },\n                                      expression: \"gridForm.password\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"12\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.address\") } },\n                                [\n                                  _c(\"b-form-input\", {\n                                    model: {\n                                      value: _vm.gridForm.address1,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.gridForm, \"address1\", $$v)\n                                      },\n                                      expression: \"gridForm.address1\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"12\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.address2\") } },\n                                [\n                                  _c(\"b-form-input\", {\n                                    model: {\n                                      value: _vm.gridForm.address2,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.gridForm, \"address2\", $$v)\n                                      },\n                                      expression: \"gridForm.address2\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"6\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.city\") } },\n                                [\n                                  _c(\"b-form-input\", {\n                                    model: {\n                                      value: _vm.gridForm.city,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.gridForm, \"city\", $$v)\n                                      },\n                                      expression: \"gridForm.city\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"4\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.state\") } },\n                                [\n                                  _c(\"b-form-select\", {\n                                    attrs: {\n                                      options: _vm.stateOptions,\n                                      plain: \"\"\n                                    },\n                                    model: {\n                                      value: _vm.gridForm.state,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.gridForm, \"state\", $$v)\n                                      },\n                                      expression: \"gridForm.state\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"2\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.zip\") } },\n                                [\n                                  _c(\"b-form-input\", {\n                                    model: {\n                                      value: _vm.gridForm.zip,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.gridForm, \"zip\", $$v)\n                                      },\n                                      expression: \"gridForm.zip\"\n                                    }\n                                  })\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"mt-4\",\n                          attrs: { type: \"submit\", variant: \"primary\" }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"forms.signin\")))]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-colxx\",\n            { attrs: { xxs: \"12\" } },\n            [\n              _c(\n                \"b-card\",\n                {\n                  staticClass: \"mb-4\",\n                  attrs: { title: _vm.$t(\"forms.inline\") }\n                },\n                [\n                  _c(\n                    \"b-form\",\n                    {\n                      attrs: { inline: \"\" },\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.onInlineSubmit($event)\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"b-input-group\",\n                        [\n                          _c(\"b-form-input\", {\n                            staticClass: \"mb-2 mr-sm-2 mb-sm-0\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: _vm.$t(\"forms.firstname\")\n                            },\n                            model: {\n                              value: _vm.inlineForm.fullname,\n                              callback: function($$v) {\n                                _vm.$set(_vm.inlineForm, \"fullname\", $$v)\n                              },\n                              expression: \"inlineForm.fullname\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-input-group\",\n                        { attrs: { prepend: \"@\" } },\n                        [\n                          _c(\"b-form-input\", {\n                            staticClass: \"mb-2 mr-sm-2 mb-sm-0\",\n                            attrs: {\n                              type: \"text\",\n                              placeholder: _vm.$t(\"forms.lastname\")\n                            },\n                            model: {\n                              value: _vm.inlineForm.lastname,\n                              callback: function($$v) {\n                                _vm.$set(_vm.inlineForm, \"lastname\", $$v)\n                              },\n                              expression: \"inlineForm.lastname\"\n                            }\n                          })\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-form-group\",\n                        [\n                          _c(\n                            \"b-form-checkbox\",\n                            {\n                              staticClass: \"mb-2 mr-sm-2 mb-sm-0\",\n                              model: {\n                                value: _vm.inlineForm.checked,\n                                callback: function($$v) {\n                                  _vm.$set(_vm.inlineForm, \"checked\", $$v)\n                                },\n                                expression: \"inlineForm.checked\"\n                              }\n                            },\n                            [_vm._v(_vm._s(_vm.$t(\"forms.custom-checkbox\")))]\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-button\",\n                        {\n                          attrs: {\n                            type: \"submit\",\n                            variant: \"outline-primary\",\n                            size: \"sm\"\n                          }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"forms.submit\")))]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"b-row\",\n        [\n          _c(\n            \"b-colxx\",\n            { attrs: { xxs: \"12\" } },\n            [\n              _c(\n                \"b-card\",\n                {\n                  staticClass: \"mb-4\",\n                  attrs: { title: _vm.$t(\"forms.validation\") }\n                },\n                [\n                  _c(\n                    \"b-form\",\n                    {\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.onValitadeFormSubmit($event)\n                        }\n                      }\n                    },\n                    [\n                      _c(\n                        \"b-row\",\n                        [\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"6\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.firstname\") } },\n                                [\n                                  _c(\"b-form-input\", {\n                                    attrs: {\n                                      type: \"text\",\n                                      state: !_vm.$v.validateForm.firstname\n                                        .$invalid\n                                    },\n                                    model: {\n                                      value: _vm.validateForm.firstname,\n                                      callback: function($$v) {\n                                        _vm.$set(\n                                          _vm.validateForm,\n                                          \"firstname\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"validateForm.firstname\"\n                                    }\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"b-form-invalid-feedback\", [\n                                    _vm._v(\n                                      _vm._s(_vm.$t(\"forms.firstname-message\"))\n                                    )\n                                  ])\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"6\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.lastname\") } },\n                                [\n                                  _c(\"b-form-input\", {\n                                    attrs: {\n                                      type: \"text\",\n                                      state: !_vm.$v.validateForm.lastname\n                                        .$invalid\n                                    },\n                                    model: {\n                                      value: _vm.validateForm.lastname,\n                                      callback: function($$v) {\n                                        _vm.$set(\n                                          _vm.validateForm,\n                                          \"lastname\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"validateForm.lastname\"\n                                    }\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"b-form-invalid-feedback\", [\n                                    _vm._v(\n                                      _vm._s(_vm.$t(\"forms.lastname-message\"))\n                                    )\n                                  ])\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"6\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.city\") } },\n                                [\n                                  _c(\"b-form-input\", {\n                                    attrs: {\n                                      type: \"text\",\n                                      state: !_vm.$v.validateForm.city.$invalid\n                                    },\n                                    model: {\n                                      value: _vm.validateForm.city,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.validateForm, \"city\", $$v)\n                                      },\n                                      expression: \"validateForm.city\"\n                                    }\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"b-form-invalid-feedback\", [\n                                    _vm._v(_vm._s(_vm.$t(\"forms.city-message\")))\n                                  ])\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-colxx\",\n                            { attrs: { sm: \"6\" } },\n                            [\n                              _c(\n                                \"b-form-group\",\n                                { attrs: { label: _vm.$t(\"forms.state\") } },\n                                [\n                                  _c(\"b-form-select\", {\n                                    attrs: {\n                                      options: _vm.stateOptions,\n                                      plain: \"\",\n                                      state: !_vm.$v.validateForm.state.$invalid\n                                    },\n                                    model: {\n                                      value: _vm.validateForm.state,\n                                      callback: function($$v) {\n                                        _vm.$set(_vm.validateForm, \"state\", $$v)\n                                      },\n                                      expression: \"validateForm.state\"\n                                    }\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"b-form-invalid-feedback\", [\n                                    _vm._v(\n                                      _vm._s(_vm.$t(\"forms.state-message\"))\n                                    )\n                                  ])\n                                ],\n                                1\n                              )\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-button\",\n                        {\n                          staticClass: \"mt-4\",\n                          attrs: {\n                            type: \"submit\",\n                            variant: \"primary\",\n                            disabled: _vm.$v.validateForm.$invalid\n                          }\n                        },\n                        [_vm._v(_vm._s(_vm.$t(\"forms.submit\")))]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}