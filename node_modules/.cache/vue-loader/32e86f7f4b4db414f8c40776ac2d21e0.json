{"remainingRequest":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlaheywood/Documents/GitHub/Accutrate/src/views/app/applications/Chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/src/views/app/applications/Chat.vue","mtime":1554628934000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlaheywood/Documents/GitHub/Accutrate/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport ApplicationMenu from '@/components/Common/ApplicationMenu'\r\nimport ContactList from '@/components/ChatApp/ContactList'\r\nimport ConversationList from '@/components/ChatApp/ConversationList'\r\nimport ConversationDetail from '@/components/ChatApp/ConversationDetail'\r\n\r\nexport default {\r\n  components: {\r\n    ApplicationMenu,\r\n    ContactList,\r\n    ConversationList,\r\n    ConversationDetail\r\n  },\r\n  data () {\r\n    return {\r\n      tabIndex: 0,\r\n      message: '',\r\n      searchKey: '',\r\n      isLoadCurrentConversation: false,\r\n      otherUser: null,\r\n      conversationMessages: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['currentUser', 'isLoadContacts', 'isLoadConversations', 'error', 'contacts', 'contactsSearchResult', 'conversations'])\r\n  },\r\n  methods: {\r\n    ...mapActions(['getContacts', 'searchContacts', 'getConversations']),\r\n    selectConversation (otherUser, messages) {\r\n      this.otherUser = otherUser\r\n      this.conversationMessages = messages\r\n    },\r\n    selectContact (userId) {\r\n      this.otherUser = this.contacts.find(x => x.id === userId)\r\n      const conversation = this.conversations.find(x => x.users.includes(userId) && x.users.includes(this.currentUser.id))\r\n      if (conversation) {\r\n        console.log('change selected conversation')\r\n        this.conversationMessages = conversation.messages\r\n      } else {\r\n        console.log('create new conversation')\r\n        const date = new Date()\r\n        this.conversations.splice(0, 0, {\r\n          users: [userId, this.currentUser.id],\r\n          messages: [],\r\n          lastMessageTime: date.getHours() + ':' + date.getMinutes()\r\n        })\r\n        this.conversationMessages = []\r\n      }\r\n      this.tabIndex = 0\r\n      this.message = ''\r\n      this.searchKey = ''\r\n    },\r\n    sendMessage () {\r\n      console.log('add message to conversation')\r\n      const date = new Date()\r\n      this.conversationMessages.push({\r\n        sender: this.currentUser.id,\r\n        text: this.message,\r\n        time: date.getHours() + ':' + date.getMinutes()\r\n      })\r\n      this.message = ''\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getContacts({ userId: this.currentUser.id, searchKey: '' })\r\n    this.getConversations(this.currentUser.id)\r\n  },\r\n  watch: {\r\n    searchKey (val, oldVal) {\r\n      this.searchContacts({\r\n        userId: this.currentUser.id,\r\n        searchKey: val\r\n      })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Chat.vue","sourceRoot":"src/views/app/applications","sourcesContent":["<template>\r\n<div>\r\n  <b-row class=\"app-row\">\r\n    <b-colxx xxs=\"12\" class=\"chat-app\">\r\n      <conversation-detail v-if=\"isLoadContacts && isLoadConversations && otherUser!=null\" key=\"conversation\"\r\n        :current-user=\"currentUser\"\r\n        :other-user=\"otherUser\"\r\n        :messages=\"conversationMessages\"  />\r\n      <div v-else class=\"loading\" key=\"conversationLoading\"></div>\r\n    </b-colxx>\r\n  </b-row>\r\n  <div class=\"chat-input-container d-flex justify-content-between align-items-center\">\r\n    <b-input class=\"flex-grow-1\" type=\"text\" :placeholder=\"$t('chat.saysomething')\" v-model=\"message\"  @keyup.native.enter=\"sendMessage\" />\r\n    <div>\r\n      <b-button variant=\"outline-primary\" class=\"icon-button large ml-1\">\r\n        <i class=\"simple-icon-paper-clip\" />\r\n      </b-button>\r\n      <b-button variant=\"primary\" class=\"icon-button large ml-1\" @click=\"sendMessage\">\r\n        <i class=\"simple-icon-arrow-right\" />\r\n      </b-button>\r\n    </div>\r\n  </div>\r\n  <application-menu>\r\n      <b-tabs no-fade class=\"pl-0 pr-0 h-100\"  content-class=\"chat-app-tab-content\" nav-class=\"card-header-tabs ml-0 mr-0\" v-model=\"tabIndex\">\r\n          <b-tab :title=\"$t('chat.messages')\" active title-item-class=\"w-50 text-center\" no-body class=\"chat-app-tab-pane\">\r\n            <div class=\"pt-4 pr-4 pl-4 pb-0 mt-2\">\r\n\r\n            </div>\r\n              <conversation-list v-if=\"isLoadContacts && isLoadConversations\" key=\"conversationList\"\r\n              :current-user=\"currentUser\"\r\n              :conversations=\"conversations\"\r\n              :contacts=\"contacts\"\r\n              @select-conversation=\"selectConversation\" />\r\n              <div v-else class=\"loading\" key=\"conversationListLoading\"></div>\r\n          </b-tab>\r\n          <b-tab :title=\"$t('chat.contacts')\" title-item-class=\"w-50 text-center\"  no-body class=\"chat-app-tab-pane\">\r\n            <div class=\"pt-4 pr-4 pl-4 pb-0 mt-2\">\r\n              <div class=\"form-group\">\r\n                <b-input type=\"text\" class=\"rounded\" :placeholder=\"$t('menu.search')\" v-model=\"searchKey\"/>\r\n              </div>\r\n            </div>\r\n              <contact-list v-if=\"isLoadContacts\" key=\"contactList\" :data=\"contactsSearchResult\" @select-contact=\"selectContact\"/>\r\n              <div v-else class=\"loading\" key=\"contactListLoading\"></div>\r\n          </b-tab>\r\n      </b-tabs>\r\n    </application-menu>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport ApplicationMenu from '@/components/Common/ApplicationMenu'\r\nimport ContactList from '@/components/ChatApp/ContactList'\r\nimport ConversationList from '@/components/ChatApp/ConversationList'\r\nimport ConversationDetail from '@/components/ChatApp/ConversationDetail'\r\n\r\nexport default {\r\n  components: {\r\n    ApplicationMenu,\r\n    ContactList,\r\n    ConversationList,\r\n    ConversationDetail\r\n  },\r\n  data () {\r\n    return {\r\n      tabIndex: 0,\r\n      message: '',\r\n      searchKey: '',\r\n      isLoadCurrentConversation: false,\r\n      otherUser: null,\r\n      conversationMessages: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['currentUser', 'isLoadContacts', 'isLoadConversations', 'error', 'contacts', 'contactsSearchResult', 'conversations'])\r\n  },\r\n  methods: {\r\n    ...mapActions(['getContacts', 'searchContacts', 'getConversations']),\r\n    selectConversation (otherUser, messages) {\r\n      this.otherUser = otherUser\r\n      this.conversationMessages = messages\r\n    },\r\n    selectContact (userId) {\r\n      this.otherUser = this.contacts.find(x => x.id === userId)\r\n      const conversation = this.conversations.find(x => x.users.includes(userId) && x.users.includes(this.currentUser.id))\r\n      if (conversation) {\r\n        console.log('change selected conversation')\r\n        this.conversationMessages = conversation.messages\r\n      } else {\r\n        console.log('create new conversation')\r\n        const date = new Date()\r\n        this.conversations.splice(0, 0, {\r\n          users: [userId, this.currentUser.id],\r\n          messages: [],\r\n          lastMessageTime: date.getHours() + ':' + date.getMinutes()\r\n        })\r\n        this.conversationMessages = []\r\n      }\r\n      this.tabIndex = 0\r\n      this.message = ''\r\n      this.searchKey = ''\r\n    },\r\n    sendMessage () {\r\n      console.log('add message to conversation')\r\n      const date = new Date()\r\n      this.conversationMessages.push({\r\n        sender: this.currentUser.id,\r\n        text: this.message,\r\n        time: date.getHours() + ':' + date.getMinutes()\r\n      })\r\n      this.message = ''\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getContacts({ userId: this.currentUser.id, searchKey: '' })\r\n    this.getConversations(this.currentUser.id)\r\n  },\r\n  watch: {\r\n    searchKey (val, oldVal) {\r\n      this.searchContacts({\r\n        userId: this.currentUser.id,\r\n        searchKey: val\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}